"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[502],{9532:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e=JSON.parse('{"key":"v-ece945e2","path":"/pages/webrtc/WebRTC%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90(%E4%BA%94)%E8%8B%B9%E6%9E%9C%E8%AE%BE%E5%A4%87%E7%9B%B8%E6%9C%BA%E9%87%87%E9%9B%86.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[{"level":3,"title":"1.1 阅读本文后，你将掌握：","slug":"_1-1-阅读本文后-你将掌握","link":"#_1-1-阅读本文后-你将掌握","children":[]}]},{"level":2,"title":"2. 相机采集基础概念及 API 介绍","slug":"_2-相机采集基础概念及-api-介绍","link":"#_2-相机采集基础概念及-api-介绍","children":[{"level":3,"title":"2.1 AVCaptureSession","slug":"_2-1-avcapturesession","link":"#_2-1-avcapturesession","children":[]},{"level":3,"title":"2.2 AVCaptureDevice","slug":"_2-2-avcapturedevice","link":"#_2-2-avcapturedevice","children":[]},{"level":3,"title":"2.3 AVCaptureDeviceInput","slug":"_2-3-avcapturedeviceinput","link":"#_2-3-avcapturedeviceinput","children":[]},{"level":3,"title":"2.4 AVCaptureVideoDataOutput","slug":"_2-4-avcapturevideodataoutput","link":"#_2-4-avcapturevideodataoutput","children":[]}]},{"level":2,"title":"3. WebRTC 如何与苹果的 API 进行交互实现相机采集","slug":"_3-webrtc-如何与苹果的-api-进行交互实现相机采集","link":"#_3-webrtc-如何与苹果的-api-进行交互实现相机采集","children":[{"level":3,"title":"3.1 开始采集:","slug":"_3-1-开始采集","link":"#_3-1-开始采集","children":[]},{"level":3,"title":"3.2 采集输出","slug":"_3-2-采集输出","link":"#_3-2-采集输出","children":[]}]},{"level":2,"title":"4. 解答","slug":"_4-解答","link":"#_4-解答","children":[{"level":3,"title":"4.1 如何自定义视频大小和图像格式","slug":"_4-1-如何自定义视频大小和图像格式","link":"#_4-1-如何自定义视频大小和图像格式","children":[]},{"level":3,"title":"4.2 如何设置帧率","slug":"_4-2-如何设置帧率","link":"#_4-2-如何设置帧率","children":[]},{"level":3,"title":"4.3 前后摄像头之间如何切换","slug":"_4-3-前后摄像头之间如何切换","link":"#_4-3-前后摄像头之间如何切换","children":[]},{"level":3,"title":"4.4 IOS 和 MACOS 代码的通用性","slug":"_4-4-ios-和-macos-代码的通用性","link":"#_4-4-ios-和-macos-代码的通用性","children":[]}]},{"level":2,"title":"5.总结","slug":"_5-总结","link":"#_5-总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"updatedTime":1694085138000,"contributors":[{"name":"make","email":"yang1001yk@gmail.com","commits":1}]},"filePathRelative":"pages/webrtc/WebRTC源码分析(五)苹果设备相机采集.md"}')},9312:(n,a,s)=>{s.r(a),s.d(a,{default:()=>Gt});var e=s(6252);const t=(0,e.uE)('<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>本文主要针对 WebRTC 在苹果设备（IOS 和 MACOS）上如何实现相机采集进行深入分析。特别是，我们会详细查看所用的 API，以及这些 API 所扮演的角色。</p><h3 id="_1-1-阅读本文后-你将掌握" tabindex="-1"><a class="header-anchor" href="#_1-1-阅读本文后-你将掌握" aria-hidden="true">#</a> 1.1 阅读本文后，你将掌握：</h3><ul><li>相机采集基础概念及 API 介绍</li><li>如何自定义视频大小和图像格式？</li><li>如何设置帧率？</li><li>在前后摄像头之间如何切换？</li><li>WebRTC 如何与苹果的 API 进行交互实现相机采集</li><li>IOS 和 MACOS 代码的通用性</li></ul><p>通过掌握上述知识点，您不仅能了解 WebRTC 在相机采集方面的功能和限制，还能更加灵活地在自己的项目中实施相关功能。</p><h2 id="_2-相机采集基础概念及-api-介绍" tabindex="-1"><a class="header-anchor" href="#_2-相机采集基础概念及-api-介绍" aria-hidden="true">#</a> 2. 相机采集基础概念及 API 介绍</h2><p>苹果通过 <code>AVFoundation</code> 框架提供了一系列与相机采集相关的 API，主要包括 <code>AVCaptureSession</code>, <code>AVCaptureDevice</code>, <code>AVCaptureDeviceInput</code>, 和 <code>AVCaptureVideoDataOutput</code>。</p><p>它们的关系可以以这张架构图说明:</p><p><img src="http://devyk.top/2022/202309011040463.png" alt="image-20230901104049183"></p><h3 id="_2-1-avcapturesession" tabindex="-1"><a class="header-anchor" href="#_2-1-avcapturesession" aria-hidden="true">#</a> 2.1 <code>AVCaptureSession</code></h3>',10),o={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession",target:"_blank",rel:"noopener noreferrer"},p=(0,e.uE)('<p>实例化 <code>AVCaptureSession</code></p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token expression"><span class="token operator">&lt;</span>AVFoundation<span class="token operator">/</span>AVFoundation<span class="token punctuation">.</span>h<span class="token operator">&gt;</span></span></span>\n\n<span class="token comment">// 初始化 AVCaptureSession</span>\nAVCaptureSession <span class="token operator">*</span>captureSession <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>AVCaptureSession alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下是核心 API 介绍:</p>',3),i={id:"_2-1-1-配置会话",tabindex:"-1"},l=(0,e._)("a",{class:"header-anchor",href:"#_2-1-1-配置会话","aria-hidden":"true"},"#",-1),c={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession#1669085",target:"_blank",rel:"noopener noreferrer"},u=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),r={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1389174-beginconfiguration",target:"_blank",rel:"noopener noreferrer"},d=(0,e._)("code",null,"beginConfiguration()",-1),v=(0,e._)("td",null,"标记对正在运行的采集会话的配置进行更改的开始，以在单个原子更新中执行",-1),k={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1388173-commitconfiguration",target:"_blank",rel:"noopener noreferrer"},m=(0,e._)("code",null,"commitConfiguration()",-1),b=(0,e._)("td",null,"在单个原子更新中提交对正在运行的采集会话的配置的一项或多项更改。",-1),_=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 开始配置会话</span>\n<span class="token punctuation">[</span>captureSession beginConfiguration<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...（添加输入和输出等）</span>\n\n<span class="token comment">// 提交配置更改</span>\n<span class="token punctuation">[</span>captureSession commitConfiguration<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),f={id:"_2-1-2-设置会话-preset",tabindex:"-1"},h=(0,e._)("a",{class:"header-anchor",href:"#_2-1-2-设置会话-preset","aria-hidden":"true"},"#",-1),g={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession#1669113",target:"_blank",rel:"noopener noreferrer"},C=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),F={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1389824-cansetsessionpreset",target:"_blank",rel:"noopener noreferrer"},V=(0,e._)("code",null,"canSetSessionPreset",-1),D=(0,e._)("td",null,"确定是否可以使用指定的预设配置采集会话。",-1),y={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1389696-sessionpreset",target:"_blank",rel:"noopener noreferrer"},A=(0,e._)("code",null,"sessionPreset",-1),S=(0,e._)("td",null,"指示输出的质量级别或比特率的预设值",-1),x=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>captureSession canSetSessionPreset<span class="token punctuation">:</span>AVCaptureSessionPreset1280x720<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>captureSession setSessionPreset<span class="token punctuation">:</span>AVCaptureSessionPreset1280x720<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),P={id:"_2-1-3-配置输入",tabindex:"-1"},w=(0,e._)("a",{class:"header-anchor",href:"#_2-1-3-配置输入","aria-hidden":"true"},"#",-1),W={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession#3966177",target:"_blank",rel:"noopener noreferrer"},O=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),j={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1390865-inputs",target:"_blank",rel:"noopener noreferrer"},T=(0,e._)("code",null,"inputs: [AVCaptureInput\\]",-1),I=(0,e._)("td",null,"向采集会话提供媒体数据的输入",-1),R={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1387180-canaddinput",target:"_blank",rel:"noopener noreferrer"},B=(0,e._)("code",null,"canAddInput(AVCaptureInput) -> Bool",-1),N=(0,e._)("td",null,"确定是否可以向会话添加输入。",-1),E={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1387239-addinput",target:"_blank",rel:"noopener noreferrer"},M=(0,e._)("code",null,"addInput(AVCaptureInput)",-1),U=(0,e._)("td",null,"向会话添加采集输入。",-1),q={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1388073-removeinput",target:"_blank",rel:"noopener noreferrer"},H=(0,e._)("code",null,"removeInput(AVCaptureInput)",-1),L=(0,e._)("td",null,"从会话中删除输入。",-1),Y=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 获取默认摄像头</span>\nAVCaptureDevice <span class="token operator">*</span>camera <span class="token operator">=</span> <span class="token punctuation">[</span>AVCaptureDevice defaultDeviceWithMediaType<span class="token punctuation">:</span>AVMediaTypeVideo<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 创建摄像头输入</span>\nNSError <span class="token operator">*</span>error<span class="token punctuation">;</span>\nAVCaptureDeviceInput <span class="token operator">*</span>cameraInput <span class="token operator">=</span> <span class="token punctuation">[</span>AVCaptureDeviceInput deviceInputWithDevice<span class="token punctuation">:</span>camera error<span class="token punctuation">:</span><span class="token operator">&amp;</span>error<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 添加摄像头输入到会话</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>captureSession canAddInput<span class="token punctuation">:</span>cameraInput<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>captureSession addInput<span class="token punctuation">:</span>cameraInput<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),G={id:"_2-1-4-配置输出",tabindex:"-1"},J=(0,e._)("a",{class:"header-anchor",href:"#_2-1-4-配置输出","aria-hidden":"true"},"#",-1),z={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession#3966180",target:"_blank",rel:"noopener noreferrer"},Q=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Z={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1387621-outputs",target:"_blank",rel:"noopener noreferrer"},K=(0,e._)("code",null,"outputs: [AVCaptureOutput\\]",-1),X=(0,e._)("td",null,"采集会话将其数据发送到的输出目标。",-1),$={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1388944-canaddoutput",target:"_blank",rel:"noopener noreferrer"},nn=(0,e._)("code",null,"canAddOutput(AVCaptureOutput) -> Bool",-1),an=(0,e._)("td",null,"确定是否可以将输出添加到会话。",-1),sn={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1387325-addoutput",target:"_blank",rel:"noopener noreferrer"},en=(0,e._)("code",null,"addOutput(AVCaptureOutput)",-1),tn=(0,e._)("td",null,"将输出添加到采集会话。",-1),on={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1385688-removeoutput",target:"_blank",rel:"noopener noreferrer"},pn=(0,e._)("code",null,"removeOutput(AVCaptureOutput)",-1),ln=(0,e._)("td",null,"从采集会话中删除输出。",-1),cn=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 创建输出对象</span>\nAVCaptureVideoDataOutput <span class="token operator">*</span>output <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>AVCaptureVideoDataOutput alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 配置输出对象的参数（省略）</span>\n\n<span class="token comment">// 添加输出到会话</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>captureSession canAddOutput<span class="token punctuation">:</span>output<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>captureSession addOutput<span class="token punctuation">:</span>output<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-5-连接输入和输出" tabindex="-1"><a class="header-anchor" href="#_2-1-5-连接输入和输出" aria-hidden="true">#</a> 2.1.5 连接输入和输出</h4>',2),un=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),rn={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/3153020-connections",target:"_blank",rel:"noopener noreferrer"},dn=(0,e._)("code",null,"connections: [AVCaptureConnection\\]",-1),vn=(0,e._)("td",null,"采集会话包含的输入和输出之间的连接。",-1),kn={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1389687-addconnection",target:"_blank",rel:"noopener noreferrer"},mn=(0,e._)("code",null,"addConnection(AVCaptureConnection)",-1),bn=(0,e._)("td",null,"添加到采集会话的连接。",-1),_n={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1390383-addinputwithnoconnections",target:"_blank",rel:"noopener noreferrer"},fn=(0,e._)("code",null,"addInputWithNoConnections(AVCaptureInput)",-1),hn=(0,e._)("td",null,"将采集输入添加到会话而不形成任何连接。",-1),gn={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1388709-addoutputwithnoconnections",target:"_blank",rel:"noopener noreferrer"},Cn=(0,e._)("code",null,"addOutputWithNoConnections(AVCaptureOutput)",-1),Fn=(0,e._)("td",null,"将采集输出添加到会话而不形成任何连接。",-1),Vn={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1390041-removeconnection",target:"_blank",rel:"noopener noreferrer"},Dn=(0,e._)("code",null,"removeConnection(AVCaptureConnection)",-1),yn=(0,e._)("td",null,"从会话中删除采集连接。",-1),An={href:"https://developer.apple.com/documentation/avfoundation/avcaptureaudiochannel",target:"_blank",rel:"noopener noreferrer"},Sn=(0,e._)("code",null,"AVCaptureAudioChannel",-1),xn=(0,e._)("td",null,"监视采集连接中音频通道的平均和峰值功率级别的对象。",-1),Pn=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 获取会话的连接</span>\nAVCaptureConnection <span class="token operator">*</span>connection <span class="token operator">=</span> <span class="token punctuation">[</span>output connectionWithMediaType<span class="token punctuation">:</span>AVMediaTypeVideo<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 配置连接的参数（例如视频方向，稳定性设置等）（省略）</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),wn={id:"_2-1-6-管理会话生命周期",tabindex:"-1"},Wn=(0,e._)("a",{class:"header-anchor",href:"#_2-1-6-管理会话生命周期","aria-hidden":"true"},"#",-1),On={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession#1669057",target:"_blank",rel:"noopener noreferrer"},jn=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Tn={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1388185-startrunning",target:"_blank",rel:"noopener noreferrer"},In=(0,e._)("code",null,"startRunning()",-1),Rn=(0,e._)("td",null,"开始通过采集管道的数据流。",-1),Bn={href:"https://developer.apple.com/documentation/avfoundation/avcapturesession/1385661-stoprunning",target:"_blank",rel:"noopener noreferrer"},Nn=(0,e._)("code",null,"stopRunning()",-1),En=(0,e._)("td",null,"停止通过采集管道的数据流。",-1),Mn=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 开始会话</span>\n<span class="token punctuation">[</span>captureSession startRunning<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 停止会话</span>\n<span class="token punctuation">[</span>captureSession stopRunning<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-avcapturedevice" tabindex="-1"><a class="header-anchor" href="#_2-2-avcapturedevice" aria-hidden="true">#</a> 2.2 <code>AVCaptureDevice</code></h3><p>用于访问和控制物理设备，如摄像头。</p><p>相关 API:</p>',4),Un=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),qn={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevicediscoverysession?language=objc",target:"_blank",rel:"noopener noreferrer"},Hn=(0,e._)("code",null,"AVCaptureDeviceDiscoverySession",-1),Ln=(0,e._)("td",null,"查找与特定搜索条件匹配的采集设备的对象。",-1),Yn={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/2361508-defaultdevicewithdevicetype?language=objc",target:"_blank",rel:"noopener noreferrer"},Gn=(0,e._)("code",null,"defaultDeviceWithDeviceType:mediaType:position:",-1),Jn=(0,e._)("td",null,"返回指定设备类型、媒体类型和位置的默认设备。",-1),zn={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1386589-defaultdevicewithmediatype?language=objc",target:"_blank",rel:"noopener noreferrer"},Qn=(0,e._)("code",null,"defaultDeviceWithMediaType:",-1),Zn=(0,e._)("td",null,"返回采集指定媒体类型的默认设备。",-1),Kn={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1388904-devicewithuniqueid?language=objc",target:"_blank",rel:"noopener noreferrer"},Xn=(0,e._)("code",null,"deviceWithUniqueID:",-1),$n=(0,e._)("td",null,"创建一个表示具有指定标识符的设备的对象。",-1),na={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevicewasconnectednotification?language=objc",target:"_blank",rel:"noopener noreferrer"},aa=(0,e._)("code",null,"AVCaptureDeviceWasConnectedNotification",-1),sa=(0,e._)("td",null,"当新的采集设备可用时系统发布的通知。",-1),ea={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevicewasdisconnectednotification?language=objc",target:"_blank",rel:"noopener noreferrer"},ta=(0,e._)("code",null,"AVCaptureDeviceWasDisconnectedNotification",-1),oa=(0,e._)("td",null,"当现有设备不可用时系统发布的通知。",-1),pa={id:"_2-2-1-授权设备访问",tabindex:"-1"},ia=(0,e._)("a",{class:"header-anchor",href:"#_2-2-1-授权设备访问","aria-hidden":"true"},"#",-1),la={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice#1669086",target:"_blank",rel:"noopener noreferrer"},ca=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),ua={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1624584-requestaccessformediatype?language=objc",target:"_blank",rel:"noopener noreferrer"},ra=(0,e._)("code",null,"requestAccessForMediaType:completionHandler:",-1),da=(0,e._)("td",null,"请求用户允许应用程序采集特定类型的媒体。",-1),va={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1624613-authorizationstatusformediatype?language=objc",target:"_blank",rel:"noopener noreferrer"},ka=(0,e._)("code",null,"authorizationStatusForMediaType:",-1),ma=(0,e._)("td",null,"返回授权状态，指示用户是否授予应用程序采集特定类型媒体的权限。",-1),ba={href:"https://developer.apple.com/documentation/avfoundation/avauthorizationstatus?language=objc",target:"_blank",rel:"noopener noreferrer"},_a=(0,e._)("code",null,"AVAuthorizationStatus",-1),fa=(0,e._)("td",null,"指示应用程序采集媒体授权状态的常量。",-1),ha={id:"_2-2-2-识别设备",tabindex:"-1"},ga=(0,e._)("a",{class:"header-anchor",href:"#_2-2-2-识别设备","aria-hidden":"true"},"#",-1),Ca={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice#3958622",target:"_blank",rel:"noopener noreferrer"},Fa=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Va={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1390477-uniqueid?language=objc",target:"_blank",rel:"noopener noreferrer"},Da=(0,e._)("code",null,"uniqueID",-1),ya=(0,e._)("td",null,"唯一标识设备的标识符。",-1),Aa={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1389500-modelid?language=objc",target:"_blank",rel:"noopener noreferrer"},Sa=(0,e._)("code",null,"modelID",-1),xa=(0,e._)("td",null,"设备的型号标识符。",-1),Pa={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1388222-localizedname?language=objc",target:"_blank",rel:"noopener noreferrer"},wa=(0,e._)("code",null,"localizedName",-1),Wa=(0,e._)("td",null,"显示在用户界面中的本地化设备名称。",-1),Oa={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1390193-manufacturer?language=objc",target:"_blank",rel:"noopener noreferrer"},ja=(0,e._)("code",null,"manufacturer",-1),Ta=(0,e._)("td",null,"设备制造商的人类可读字符串。",-1),Ia={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/2361119-devicetype?language=objc",target:"_blank",rel:"noopener noreferrer"},Ra=(0,e._)("code",null,"deviceType",-1),Ba=(0,e._)("td",null,"设备的类型，例如内置麦克风或广角摄像头。",-1),Na={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevicetype?language=objc",target:"_blank",rel:"noopener noreferrer"},Ea=(0,e._)("code",null,"AVCaptureDeviceType",-1),Ma=(0,e._)("td",null,"定义框架支持的设备类型的结构。",-1),Ua={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1386909-position?language=objc",target:"_blank",rel:"noopener noreferrer"},qa=(0,e._)("code",null,"position",-1),Ha=(0,e._)("td",null,"采集设备硬件的物理位置。",-1),La={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceposition?language=objc",target:"_blank",rel:"noopener noreferrer"},Ya=(0,e._)("code",null,"AVCaptureDevicePosition",-1),Ga=(0,e._)("td",null,"指示采集设备的物理位置的常量。",-1),Ja={id:"_2-2-3-配置相机硬件",tabindex:"-1"},za=(0,e._)("a",{class:"header-anchor",href:"#_2-2-3-配置相机硬件","aria-hidden":"true"},"#",-1),Qa={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice#1669131",target:"_blank",rel:"noopener noreferrer"},Za=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Ka={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1387810-lockforconfiguration?language=objc",target:"_blank",rel:"noopener noreferrer"},Xa=(0,e._)("code",null,"- lockForConfiguration:",-1),$a=(0,e._)("td",null,"请求独占访问权限以配置设备硬件属性。",-1),ns={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1387917-unlockforconfiguration?language=objc",target:"_blank",rel:"noopener noreferrer"},as=(0,e._)("code",null,"- unlockForConfiguration",-1),ss=(0,e._)("td",null,"释放对设备硬件属性的独占控制。",-1),es=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>AVCaptureDevice <span class="token operator">*</span>camera <span class="token operator">=</span> <span class="token punctuation">[</span>AVCaptureDevice defaultDeviceWithMediaType<span class="token punctuation">:</span>AVMediaTypeVideo<span class="token punctuation">]</span><span class="token punctuation">;</span>\nNSError <span class="token operator">*</span>error <span class="token operator">=</span> nil<span class="token punctuation">;</span>\n\n<span class="token comment">// 锁定配置</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>camera lockForConfiguration<span class="token punctuation">:</span><span class="token operator">&amp;</span>error<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 执行硬件配置代码</span>\n    \n    <span class="token comment">// 解锁配置</span>\n    <span class="token punctuation">[</span>camera unlockForConfiguration<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;Error locking for configuration: %@&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),ts=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),os={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/1624644-subjectareachangemonitoringenabl?language=objc",target:"_blank",rel:"noopener noreferrer"},ps=(0,e._)("code",null,"subjectAreaChangeMonitoringEnabled",-1),is=(0,e._)("td",null,"一个布尔值，指示设备是否监视主题区域的更改。",-1),ls={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevicesubjectareadidchangenotification?language=objc",target:"_blank",rel:"noopener noreferrer"},cs=(0,e._)("code",null,"AVCaptureDeviceSubjectAreaDidChangeNotification",-1),us=(0,e._)("td",null,"当采集设备检测到视频主题区域发生重大变化时系统发布的通知。",-1),rs=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>camera<span class="token punctuation">.</span>subjectAreaChangeMonitoringEnabled <span class="token operator">=</span> YES<span class="token punctuation">;</span>\n\n<span class="token comment">// 添加观察者</span>\n<span class="token punctuation">[</span><span class="token punctuation">[</span>NSNotificationCenter defaultCenter<span class="token punctuation">]</span> addObserver<span class="token punctuation">:</span><span class="token keyword">self</span>\n                                         selector<span class="token punctuation">:</span><span class="token keyword">@selector</span><span class="token punctuation">(</span>subjectAreaDidChange<span class="token punctuation">:</span><span class="token punctuation">)</span>\n                                             \tname<span class="token punctuation">:</span>AVCaptureDeviceSubjectAreaDidChangeNotification\n                                           object<span class="token punctuation">:</span>camera<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),ds=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),vs={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/formats?language=objc",target:"_blank",rel:"noopener noreferrer"},ks=(0,e._)("td",null,"配置采集格式和相机帧速率。",-1),ms=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>// 获取支持的媒体格式\nNSArray *formats = [camera formats];\nAVCaptureDeviceFormat *selectedFormat = nil;\nfor (AVCaptureDeviceFormat *format in formats) {\n    // 在这里，你可以根据需要来选择一个合适的媒体格式\n    // 例如，根据分辨率或帧率来选择\n    CMFormatDescriptionRef formatDesc = format.formatDescription;\n    NSLog(@&quot;Format: %@&quot;, CFBridgingRelease(CMFormatDescriptionCopyDescription(formatDesc)));\n    if (CMFormatDescriptionGetMediaSubType(formatDesc) == kCVPixelFormatType_420YpCbCr8BiPlanarFullRange) {\n        selectedFormat = format;\n        break;\n    }\n}\n\nif (selectedFormat) {\n    if ([camera lockForConfiguration:nil]) {\n        camera.activeFormat = selectedFormat;\n        [camera unlockForConfiguration];\n    }\n}\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),bs=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),_s={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/focus?language=objc",target:"_blank",rel:"noopener noreferrer"},fs=(0,e._)("td",null,"配置相机的自动对焦行为，或手动设置其镜头位置。",-1),hs=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>if ([camera isFocusModeSupported:AVCaptureFocusModeAutoFocus]) {\n    camera.focusMode = AVCaptureFocusModeAutoFocus;\n}\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),gs=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Cs={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/exposure?language=objc",target:"_blank",rel:"noopener noreferrer"},Fs=(0,e._)("td",null,"配置相机的自动曝光行为，或手动控制其曝光设置。",-1),Vs=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>if ([camera isExposureModeSupported:AVCaptureExposureModeAutoExpose]) {\n    camera.exposureMode = AVCaptureExposureModeAutoExpose;\n}\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),Ds=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),ys={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/white_balance?language=objc",target:"_blank",rel:"noopener noreferrer"},As=(0,e._)("td",null,"配置摄像机的自动白平衡行为，或手动控制白平衡设置。",-1),Ss=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>if ([camera isWhiteBalanceModeSupported:AVCaptureWhiteBalanceModeAutoWhiteBalance]) {\n    camera.whiteBalanceMode = AVCaptureWhiteBalanceModeAutoWhiteBalance;\n}\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),xs=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Ps={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/lighting?language=objc",target:"_blank",rel:"noopener noreferrer"},ws=(0,e._)("td",null,"配置设备闪光灯、手电筒和弱光设置。",-1),Ws=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>if ([camera hasFlash]) {\n    camera.flashMode = AVCaptureFlashModeAuto;\n}\nif ([camera hasTorch]) {\n    camera.torchMode = AVCaptureTorchModeAuto;\n}\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),Os=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),js={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/color?language=objc",target:"_blank",rel:"noopener noreferrer"},Ts=(0,e._)("td",null,"管理设备的 HDR 和色彩空间设置。",-1),Is=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 检查HDR是否可用，并设置</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>camera isHDREnabled<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>camera lockForConfiguration<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">[</span>camera setAutomaticallyAdjustsVideoHDREnabled<span class="token punctuation">:</span>YES<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 自动调整HDR</span>\n        <span class="token punctuation">[</span>camera unlockForConfiguration<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 检查和设置色彩空间</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>camera<span class="token punctuation">.</span>activeFormat isVideoColorSpaceSupported<span class="token punctuation">:</span>AVCaptureColorSpace_P3_D65<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>camera lockForConfiguration<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        camera<span class="token punctuation">.</span>activeColorSpace <span class="token operator">=</span> AVCaptureColorSpace_P3_D65<span class="token punctuation">;</span> <span class="token comment">// 设置P3色彩空间</span>\n        <span class="token punctuation">[</span>camera unlockForConfiguration<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),Rs=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Bs={href:"https://developer.apple.com/documentation/avfoundation/avcapturedevice/zoom?language=objc",target:"_blank",rel:"noopener noreferrer"},Ns=(0,e._)("td",null,"配置设备缩放行为并检查硬件功能。",-1),Es=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>if ([camera respondsToSelector:@selector(setVideoZoomFactor:)]) {\n    camera.videoZoomFactor = 2.0; // 示例缩放因子\n}\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-avcapturedeviceinput" tabindex="-1"><a class="header-anchor" href="#_2-3-avcapturedeviceinput" aria-hidden="true">#</a> 2.3 <code>AVCaptureDeviceInput</code></h3><p>用于从采集设备（如摄像头或麦克风）提供媒体输入到采集会话（<code>AVCaptureSession</code>）的对象。这个类是 <code>AVCaptureInput</code> 的一个具体子类，主要用于将采集设备连接到采集会话。</p>',3),Ms={id:"_2-3-1-创建输入",tabindex:"-1"},Us=(0,e._)("a",{class:"header-anchor",href:"#_2-3-1-创建输入","aria-hidden":"true"},"#",-1),qs={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput#1679045",target:"_blank",rel:"noopener noreferrer"},Hs=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Ls={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput/1450880-deviceinputwithdevice?language=objc",target:"_blank",rel:"noopener noreferrer"},Ys=(0,e._)("code",null,"deviceInputWithDevice:error:",-1),Gs=(0,e._)("td",null,"返回指定采集设备的新输入。",-1),Js={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput/1387609-initwithdevice?language=objc",target:"_blank",rel:"noopener noreferrer"},zs=(0,e._)("code",null,"initWithDevice:error:",-1),Qs=(0,e._)("td",null,"为指定的采集设备创建输入。",-1),Zs=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>// 获取默认的摄像头设备\nAVCaptureDevice *camera = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];\nNSError *error = nil;\n\n// 使用deviceInputWithDevice:error:创建输入\nAVCaptureDeviceInput *input = [AVCaptureDeviceInput deviceInputWithDevice:camera error:&amp;error];\n\n// 或者使用initWithDevice:error:方法\nAVCaptureDeviceInput *input = [[AVCaptureDeviceInput alloc] initWithDevice:camera error:&amp;error];\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),Ks={id:"_2-3-2-配置输入属性",tabindex:"-1"},Xs=(0,e._)("a",{class:"header-anchor",href:"#_2-3-2-配置输入属性","aria-hidden":"true"},"#",-1),$s={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput#3019918",target:"_blank",rel:"noopener noreferrer"},ne=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),ae={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput/2968218-unifiedautoexposuredefaultsenabl?language=objc",target:"_blank",rel:"noopener noreferrer"},se=(0,e._)("code",null,"unifiedAutoExposureDefaultsEnabled",-1),ee=(0,e._)("td",null,"一个布尔值，指示输入是否启用统一自动曝光默认值。",-1),te={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput/3153008-videominframedurationoverride?language=objc",target:"_blank",rel:"noopener noreferrer"},oe=(0,e._)("code",null,"videoMinFrameDurationOverride",-1),pe=(0,e._)("td",null,"充当采集设备的活动视频最小帧持续时间修改器的时间值。",-1),ie=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>// 启用或禁用统一的自动曝光默认值\ninput.unifiedAutoExposureDefaultsEnabled = YES;\n\n// 设置视频最小帧持续时间修饰符\ninput.videoMinFrameDurationOverride = CMTimeMake(1, 30);  // 例如，设置为30fps\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),le={id:"_2-3-3-访问设备",tabindex:"-1"},ce=(0,e._)("a",{class:"header-anchor",href:"#_2-3-3-访问设备","aria-hidden":"true"},"#",-1),ue={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput#1679061",target:"_blank",rel:"noopener noreferrer"},re=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),de={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput/1387915-device?language=objc",target:"_blank",rel:"noopener noreferrer"},ve=(0,e._)("code",null,"device",-1),ke=(0,e._)("td",null,"与此输入关联的采集设备。",-1),me={href:"https://developer.apple.com/documentation/avfoundation/avcapturedeviceinput/3173170-portswithmediatype?language=objc",target:"_blank",rel:"noopener noreferrer"},be=(0,e._)("code",null,"portsWithMediaType:sourceDeviceType:sourceDevicePosition:",-1),_e=(0,e._)("td",null,"检索虚拟设备的组成设备端口以在多摄像机会话中使用。",-1),fe=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>// 访问与此输入关联的采集设备\nAVCaptureDevice *associatedDevice = input.device;\n\n// 在多摄像机会话中，检索虚拟设备的组成设备端口\nNSArray *ports = [input portsWithMediaType:AVMediaTypeVideo sourceDeviceType:AVCaptureDeviceTypeBuiltInWideAngleCamera sourceDevicePosition:AVCaptureDevicePositionBack];\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-avcapturevideodataoutput" tabindex="-1"><a class="header-anchor" href="#_2-4-avcapturevideodataoutput" aria-hidden="true">#</a> 2.4 <code>AVCaptureVideoDataOutput</code></h3>',2),he={href:"https://developer.apple.com/documentation/avfoundation/avcaptureoutput?language=objc",target:"_blank",rel:"noopener noreferrer"},ge=(0,e._)("code",null,"AVCaptureOutput",-1),Ce={id:"_2-4-1-配置视频捕捉",tabindex:"-1"},Fe=(0,e._)("a",{class:"header-anchor",href:"#_2-4-1-配置视频捕捉","aria-hidden":"true"},"#",-1),Ve={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput#1668986",target:"_blank",rel:"noopener noreferrer"},De=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),ye={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1389945-videosettings?language=objc",target:"_blank",rel:"noopener noreferrer"},Ae=(0,e._)("code",null,"videoSettings",-1),Se=(0,e._)("td",null,"包含输出压缩设置的字典。",-1),xe={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1385780-alwaysdiscardslatevideoframes?language=objc",target:"_blank",rel:"noopener noreferrer"},Pe=(0,e._)("code",null,"alwaysDiscardsLateVideoFrames",-1),we=(0,e._)("td",null,"指示是否在视频帧迟到时丢弃它们。",-1),We={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/3153021-automaticallyconfiguresoutputbuf?language=objc",target:"_blank",rel:"noopener noreferrer"},Oe=(0,e._)("code",null,"automaticallyConfiguresOutputBufferDimensions",-1),je=(0,e._)("td",null,"一个布尔值，指示输出是否自动配置输出缓冲区的大小。",-1),Te={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/3153022-deliverspreviewsizedoutputbuffer?language=objc",target:"_blank",rel:"noopener noreferrer"},Ie=(0,e._)("code",null,"deliversPreviewSizedOutputBuffers",-1),Re=(0,e._)("td",null,"一个布尔值，指示输出是否配置为提供预览大小的缓冲区。",-1),Be={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/2867900-recommendedvideosettingsforvideo?language=objc",target:"_blank",rel:"noopener noreferrer"},Ne=(0,e._)("code",null,"recommendedVideoSettingsForVideoCodecType:assetWriterOutputFileType:",-1),Ee=(0,e._)("td",null,"返回适合采集要录制到具有指定编解码器和类型的文件的视频的视频设置字典。",-1),Me={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1616290-recommendedvideosettingsforasset?language=objc",target:"_blank",rel:"noopener noreferrer"},Ue=(0,e._)("code",null,"recommendedVideoSettingsForAssetWriterWithOutputFileType:",-1),qe=(0,e._)("td",null,"指定与 AVAssetWriterInput 一起使用的推荐设置。",-1),He=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 创建实例</span>\nAVCaptureVideoDataOutput <span class="token operator">*</span>videoOutput <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>AVCaptureVideoDataOutput alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 配置输出设置</span>\nvideoOutput<span class="token punctuation">.</span>videoSettings <span class="token operator">=</span> <span class="token operator">@</span><span class="token punctuation">{</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>kCVPixelBufferPixelFormatTypeKey <span class="token punctuation">:</span> <span class="token operator">@</span><span class="token punctuation">(</span>kCVPixelFormatType_32BGRA<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 是否丢弃迟到的帧</span>\nvideoOutput<span class="token punctuation">.</span>alwaysDiscardsLateVideoFrames <span class="token operator">=</span> YES<span class="token punctuation">;</span>\n\n<span class="token comment">// 自动配置输出缓冲区大小</span>\nvideoOutput<span class="token punctuation">.</span>automaticallyConfiguresOutputBufferDimensions <span class="token operator">=</span> YES<span class="token punctuation">;</span>\n\n<span class="token comment">// 提供预览大小的缓冲区</span>\nvideoOutput<span class="token punctuation">.</span>deliversPreviewSizedOutputBuffers <span class="token operator">=</span> NO<span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),Le={id:"_2-4-2-检索支持的视频类型",tabindex:"-1"},Ye=(0,e._)("a",{class:"header-anchor",href:"#_2-4-2-检索支持的视频类型","aria-hidden":"true"},"#",-1),Ge={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput#1669059",target:"_blank",rel:"noopener noreferrer"},Je=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),ze={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1387050-availablevideocvpixelformattypes?language=objc",target:"_blank",rel:"noopener noreferrer"},Qe=(0,e._)("code",null,"availableVideoCVPixelFormatTypes",-1),Ze=(0,e._)("td",null,"输出支持的视频像素格式。",-1),Ke={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1389227-availablevideocodectypes?language=objc",target:"_blank",rel:"noopener noreferrer"},Xe=(0,e._)("code",null,"availableVideoCodecTypes",-1),$e=(0,e._)("td",null,"输出支持的视频编解码器。",-1),nt={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/2867901-availablevideocodectypesforasset?language=objc",target:"_blank",rel:"noopener noreferrer"},at=(0,e._)("code",null,"availableVideoCodecTypesForAssetWriterWithOutputFileType:",-1),st=(0,e._)("td",null,"输出支持将视频写入输出文件的视频编解码器。",-1),et={href:"https://developer.apple.com/documentation/avfoundation/avvideocodectype?language=objc",target:"_blank",rel:"noopener noreferrer"},tt=(0,e._)("code",null,"AVVideoCodecType",-1),ot=(0,e._)("td",null,"一组常量，描述系统支持视频采集的编解码器。",-1),pt=(0,e._)("tr",null,[(0,e._)("td"),(0,e._)("td")],-1),it=(0,e.uE)('<div class="language-objective-c line-numbers-mode" data-ext="objective-c"><pre class="language-objective-c"><code>// 查看可用的像素格式和编解码器类型\nNSArray *pixelFormats = videoOutput.availableVideoCVPixelFormatTypes;\nNSArray *codecTypes = videoOutput.availableVideoCodecTypes;\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),lt={id:"_2-4-3-接收采集的视频数据",tabindex:"-1"},ct=(0,e._)("a",{class:"header-anchor",href:"#_2-4-3-接收采集的视频数据","aria-hidden":"true"},"#",-1),ut={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput#1669096",target:"_blank",rel:"noopener noreferrer"},rt=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),dt={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1389008-setsamplebufferdelegate?language=objc",target:"_blank",rel:"noopener noreferrer"},vt=(0,e._)("code",null,"setSampleBufferDelegate:queue:",-1),kt=(0,e._)("td",null,"设置示例缓冲区委托和调用回调的队列。",-1),mt={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1385886-samplebufferdelegate?language=objc",target:"_blank",rel:"noopener noreferrer"},bt=(0,e._)("code",null,"sampleBufferDelegate",-1),_t=(0,e._)("td",null,"采集对象的委托。",-1),ft={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/1385831-samplebuffercallbackqueue?language=objc",target:"_blank",rel:"noopener noreferrer"},ht=(0,e._)("code",null,"sampleBufferCallbackQueue",-1),gt=(0,e._)("td",null,"系统调用委托回调的队列。",-1),Ct={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutputsamplebufferdelegate?language=objc",target:"_blank",rel:"noopener noreferrer"},Ft=(0,e._)("code",null,"AVCaptureVideoDataOutputSampleBufferDelegate",-1),Vt=(0,e._)("td",null,"从视频数据输出接收样本缓冲区并监视其状态的方法。",-1),Dt=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 设置输出的代理和队列</span>\n<span class="token punctuation">[</span>videoOutput setSampleBufferDelegate<span class="token punctuation">:</span><span class="token keyword">self</span> queue<span class="token punctuation">:</span><span class="token function">dispatch_get_main_queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>captureOutput<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureOutput <span class="token operator">*</span><span class="token punctuation">)</span>output didOutputSampleBuffer<span class="token punctuation">:</span><span class="token punctuation">(</span>CMSampleBufferRef<span class="token punctuation">)</span>sampleBuffer fromConnection<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureConnection <span class="token operator">*</span><span class="token punctuation">)</span>connection <span class="token punctuation">{</span>\n    <span class="token comment">// 处理 sampleBuffer</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),yt={id:"_2-4-4-创建视频采集输出",tabindex:"-1"},At=(0,e._)("a",{class:"header-anchor",href:"#_2-4-4-创建视频采集输出","aria-hidden":"true"},"#",-1),St={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput#3025433",target:"_blank",rel:"noopener noreferrer"},xt=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"API"),(0,e._)("th",null,"说明")])],-1),Pt={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/2879216-init?language=objc",target:"_blank",rel:"noopener noreferrer"},wt=(0,e._)("code",null,"init",-1),Wt=(0,e._)("td",null,"创建新的视频文件输出。",-1),Ot={href:"https://developer.apple.com/documentation/avfoundation/avcapturevideodataoutput/2879482-new?language=objc",target:"_blank",rel:"noopener noreferrer"},jt=(0,e._)("code",null,"new",-1),Tt=(0,e._)("td",null,"创建新的视频文件输出。",-1),It=(0,e.uE)('<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 使用init或new方法创建实例</span>\nAVCaptureVideoDataOutput <span class="token operator">*</span>videoOutput <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>AVCaptureVideoDataOutput alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 或</span>\nAVCaptureVideoDataOutput <span class="token operator">*</span>videoOutput <span class="token operator">=</span> <span class="token punctuation">[</span>AVCaptureVideoDataOutput new<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-webrtc-如何与苹果的-api-进行交互实现相机采集" tabindex="-1"><a class="header-anchor" href="#_3-webrtc-如何与苹果的-api-进行交互实现相机采集" aria-hidden="true">#</a> 3. WebRTC 如何与苹果的 API 进行交互实现相机采集</h2><p>根据上面的采集基础概念和上一篇文章的视频流程分析，我们来看下在 webrtc 苹果端(IOS,MAC) 是如何进行的相机采集:</p><p>一般的流程是这样的:</p><ol><li><p>创建一个<code>AVCaptureSession</code>对象，</p></li><li><p>并且为该对象添加输入设备和视频数据输出对象。</p></li><li><p>为<code>AVCaptureSession</code>设置视频分辨率、帧率、图像格式等信息</p></li><li><p>开始采集</p></li></ol><p>我们来验证下这个流程，首先看一下在<code>webrtc</code>中的流程:</p><p><img src="http://devyk.top/2022/202309041245768.png" alt="WebRTC 苹果设备相机采集"></p><p>其次当我们点击 IOS 或者 MAC OS 上对应的 <code>Call room</code> 、<code>start call</code> (如下图)之后就会执行到 <code>ARDAppClient createLocalVideoTracks</code> 函数</p><p><img src="http://devyk.top/2022/202309042223608.png" alt="采集启动"></p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCVideoTrack<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token punctuation">)</span>createLocalVideoTrack <span class="token punctuation">{</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token operator">!</span>TARGET_IPHONE_SIMULATOR</span></span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>isBroadcast<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCameraVideoCapturer<span class="token punctuation">)</span> <span class="token operator">*</span>capturer <span class="token operator">=</span>\n        <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCameraVideoCapturer<span class="token punctuation">)</span> alloc<span class="token punctuation">]</span> initWithDelegate<span class="token punctuation">:</span>source<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">[</span>_delegate appClient<span class="token punctuation">:</span><span class="token keyword">self</span> didCreateLocalCapturer<span class="token punctuation">:</span>capturer<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__IPHONE_11_0<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>__IPHONE_OS_VERSION_MAX_ALLOWED <span class="token operator">&gt;=</span> __IPHONE_11_0<span class="token punctuation">)</span></span></span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>_factory videoTrackWithSource<span class="token punctuation">:</span>source trackId<span class="token punctuation">:</span>kARDVideoTrackId<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码首先是初始化 <code>RTCCameraVideoCapturer</code> 对象，其次是调用 <code>ARDAppClientDelegate appClient</code> 函数，我们依次看下各自的实现：</p><h3 id="_3-1-开始采集" tabindex="-1"><a class="header-anchor" href="#_3-1-开始采集" aria-hidden="true">#</a> 3.1 <strong>开始采集:</strong></h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span>instancetype<span class="token punctuation">)</span>initWithDelegate<span class="token punctuation">:</span><span class="token punctuation">(</span>__weak id<span class="token operator">&lt;</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCVideoCapturerDelegate<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>delegate <span class="token punctuation">{</span>\n  <span class="token comment">// 第一步</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token keyword">self</span> initWithDelegate<span class="token punctuation">:</span>delegate captureSession<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">[</span>AVCaptureSession alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span>instancetype<span class="token punctuation">)</span>initWithDelegate<span class="token punctuation">:</span><span class="token punctuation">(</span>__weak id<span class="token operator">&lt;</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCVideoCapturerDelegate<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>delegate\n                  captureSession<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureSession <span class="token operator">*</span><span class="token punctuation">)</span>captureSession <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">self</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">super</span> initWithDelegate<span class="token punctuation">:</span>delegate<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//第二步</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token keyword">self</span> setupCaptureSession<span class="token punctuation">:</span>captureSession<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> nil<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n  <span class="token keyword">return</span> <span class="token keyword">self</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span>BOOL<span class="token punctuation">)</span>setupCaptureSession<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureSession <span class="token operator">*</span><span class="token punctuation">)</span>captureSession <span class="token punctuation">{</span>\n  <span class="token function">NSAssert</span><span class="token punctuation">(</span>_captureSession <span class="token operator">==</span> nil<span class="token punctuation">,</span> <span class="token string">@&quot;Setup capture session called twice.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  _captureSession <span class="token operator">=</span> captureSession<span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>WEBRTC_IOS<span class="token punctuation">)</span></span></span>\n  <span class="token comment">//第三步</span>\n  _captureSession<span class="token punctuation">.</span>sessionPreset <span class="token operator">=</span> AVCaptureSessionPresetInputPriority<span class="token punctuation">;</span>\n  _captureSession<span class="token punctuation">.</span>usesApplicationAudioSession <span class="token operator">=</span> NO<span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n  <span class="token comment">//第四步</span>\n  <span class="token punctuation">[</span><span class="token keyword">self</span> setupVideoDataOutput<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">//第五步</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span>_captureSession canAddOutput<span class="token punctuation">:</span>_videoDataOutput<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">RTCLogError</span><span class="token punctuation">(</span><span class="token string">@&quot;Video data output unsupported.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> NO<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">[</span>_captureSession addOutput<span class="token punctuation">:</span>_videoDataOutput<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> YES<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到上面的第一步，内部实例化了一个 <code>AVCaptureSession</code> 对象，也就验证了我们开始所说的第一点，</p>',14),Rt={href:"https://developer.apple.com/documentation/avfoundation/avcapturesessionpresetinputpriority",target:"_blank",rel:"noopener noreferrer"},Bt=(0,e._)("code",null,"AVCaptureSession",-1),Nt=(0,e.uE)('<p>这个做法的好处是，它允许每个捕获设备根据其硬件能力和配置来自主决定输出的质量和性能，而不受默认预设值（例如 30fps）的限制。这样，您可以更灵活地控制不同设备的捕获质量，以满足特定的需求，而不必受到全局设置的影响。</p><p>简而言之，<code>AVCaptureSessionPresetInputPriority</code> 让捕获设备自己决定输出的质量，而不受固定的帧率等限制。这对于需要定制化捕获行为的应用程序来说非常有用，因为它提供了更多的灵活性和性能控制选项。</p><p>第四步是 <code>setupVideoDataOutput</code> 函数，我们看下内部实现:</p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>setupVideoDataOutput <span class="token punctuation">{</span>\n  <span class="token comment">//4.1 步</span>\n  AVCaptureVideoDataOutput <span class="token operator">*</span>videoDataOutput <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>AVCaptureVideoDataOutput alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">//4.2 步</span>\n  NSSet<span class="token operator">&lt;</span>NSNumber <span class="token operator">*</span><span class="token operator">&gt;</span> <span class="token operator">*</span>supportedPixelFormats <span class="token operator">=</span>\n      <span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCVPixelBuffer<span class="token punctuation">)</span> supportedPixelFormats<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  NSMutableOrderedSet <span class="token operator">*</span>availablePixelFormats <span class="token operator">=</span>\n      <span class="token punctuation">[</span>NSMutableOrderedSet orderedSetWithArray<span class="token punctuation">:</span>videoDataOutput<span class="token punctuation">.</span>availableVideoCVPixelFormatTypes<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">[</span>availablePixelFormats intersectSet<span class="token punctuation">:</span>supportedPixelFormats<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  NSNumber <span class="token operator">*</span>pixelFormat <span class="token operator">=</span> availablePixelFormats<span class="token punctuation">.</span>firstObject<span class="token punctuation">;</span>\n  <span class="token function">NSAssert</span><span class="token punctuation">(</span>pixelFormat<span class="token punctuation">,</span> <span class="token string">@&quot;Output device has no supported formats.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  _preferredOutputPixelFormat <span class="token operator">=</span> <span class="token punctuation">[</span>pixelFormat unsignedIntValue<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  _outputPixelFormat <span class="token operator">=</span> _preferredOutputPixelFormat<span class="token punctuation">;</span>\n  <span class="token comment">//4.3 步</span>\n  videoDataOutput<span class="token punctuation">.</span>videoSettings <span class="token operator">=</span> <span class="token operator">@</span><span class="token punctuation">{</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>kCVPixelBufferPixelFormatTypeKey <span class="token punctuation">:</span> pixelFormat<span class="token punctuation">}</span><span class="token punctuation">;</span>\n  videoDataOutput<span class="token punctuation">.</span>alwaysDiscardsLateVideoFrames <span class="token operator">=</span> NO<span class="token punctuation">;</span>\n  <span class="token comment">//4.4 步</span>\n  <span class="token punctuation">[</span>videoDataOutput setSampleBufferDelegate<span class="token punctuation">:</span><span class="token keyword">self</span> queue<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">.</span>frameQueue<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  _videoDataOutput <span class="token operator">=</span> videoDataOutput<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 4.1步:</p>',5),Et=(0,e._)("code",null,"AVCaptureVideoDataOutput",-1),Mt={href:"https://developer.apple.com/documentation/avfoundation/avcaptureoutput?language=objc",target:"_blank",rel:"noopener noreferrer"},Ut=(0,e._)("code",null,"AVCaptureOutput",-1),qt=(0,e.uE)('<p>上面的 4.2 步：</p><ul><li>通过<code>supportedPixelFormats</code> 函数获取 webrtc 内置的支持的像素格式</li></ul><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">+</span> <span class="token punctuation">(</span>NSSet<span class="token operator">&lt;</span>NSNumber<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token operator">*</span><span class="token punctuation">)</span>supportedPixelFormats <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>NSSet setWithObjects<span class="token punctuation">:</span><span class="token operator">@</span><span class="token punctuation">(</span>kCVPixelFormatType_420YpCbCr8BiPlanarFullRange<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                               <span class="token operator">@</span><span class="token punctuation">(</span>kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                               <span class="token operator">@</span><span class="token punctuation">(</span>kCVPixelFormatType_32BGRA<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                               <span class="token operator">@</span><span class="token punctuation">(</span>kCVPixelFormatType_32ARGB<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                               nil<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从<code>videoDataOutput</code>对象中获取了可用的视频像素格式。</li><li>通过交集操作，将支持的像素格式与可用的像素格式进行匹配，以便选择一个合适的像素格式。</li><li>如果没有可用的像素格式，将触发断言错误。</li></ul><p>上面的 4.3 步:</p><ul><li>设置<code>videoDataOutput</code>的<code>videoSettings</code>属性，使用选定的像素格式来配置视频输出。</li><li><code>alwaysDiscardsLateVideoFrames</code>属性设置为<code>NO</code>，这表示不会丢弃延迟的视频帧。</li></ul><p>上面的 4.4 步：</p><ul><li>将当前对象设置为<code>videoDataOutput</code>的Sample Buffer代理，表示在捕获到新的视频帧数据时将调用当前对象的方法进行处理。</li><li>使用<code>self.frameQueue</code>作为队列，这可能是一个用于处理视频帧数据的自定义队列。</li></ul><p>总的来说，<code>setupVideoDataOutput</code> 这段代码主要用于配置捕获视频数据的输出格式和处理方式，确保选定的像素格式是可用的，并设置了适当的代理和队列来处理捕获到的视频帧。</p><p>我们继续看最上面的 第 5 步:</p><ul><li>其实就是将第 4.4 步配置好的 <code>videoDataOutput</code> 添加到 _captureSession 对象中去。这一步也就验证了最上面的第2步骤的视频数据输出对象的配置。</li></ul><p>这上面就是 <code> RTCCameraVideoCapturer initWithDelegate</code> 的整个分析，下面我们接着分析 <code>appClient</code> 函数。</p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>appClient<span class="token punctuation">:</span><span class="token punctuation">(</span>ARDAppClient<span class="token operator">*</span><span class="token punctuation">)</span>client\n    didCreateLocalCapturer<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCameraVideoCapturer<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token punctuation">)</span>localCapturer <span class="token punctuation">{</span>\n  _captureController <span class="token operator">=</span>\n      <span class="token punctuation">[</span><span class="token punctuation">[</span>ARDCaptureController alloc<span class="token punctuation">]</span> initWithCapturer<span class="token punctuation">:</span>localCapturer\n                                            settings<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">[</span>ARDSettingsModel alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  \n      <span class="token punctuation">[</span>_captureController startCapture<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主要是实例化 <code>ARDCaptureController</code> ，并初始化参数，最后通过内部的 <code>startCapture</code> 函数开启采集，该函数主要逻辑如下:</p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>startCapture<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSError <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span>completion <span class="token punctuation">{</span>\n  AVCaptureDevicePosition position <span class="token operator">=</span>\n      _usingFrontCamera <span class="token operator">?</span> AVCaptureDevicePositionFront <span class="token punctuation">:</span> AVCaptureDevicePositionBack<span class="token punctuation">;</span>\n  AVCaptureDevice <span class="token operator">*</span>device <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">self</span> findDeviceForPosition<span class="token punctuation">:</span>position<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  AVCaptureDeviceFormat <span class="token operator">*</span>format <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">self</span> selectFormatForDevice<span class="token punctuation">:</span>device<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>format <span class="token operator">==</span> nil<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">RTCLogError</span><span class="token punctuation">(</span><span class="token string">@&quot;No valid formats for device %@&quot;</span><span class="token punctuation">,</span> device<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">NSAssert</span><span class="token punctuation">(</span>NO<span class="token punctuation">,</span> <span class="token string">@&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  NSInteger fps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">self</span> selectFpsForFormat<span class="token punctuation">:</span>format<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token punctuation">[</span>_capturer startCaptureWithDevice<span class="token punctuation">:</span>device format<span class="token punctuation">:</span>format fps<span class="token punctuation">:</span>fps completionHandler<span class="token punctuation">:</span>completion<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>首先，它根据是否使用前置摄像头来确定捕获设备的位置（前置或后置）。</li><li>接着，它通过调用<code>findDeviceForPosition:</code>方法查找对应位置的摄像头设备。</li><li>然后，它调用<code>selectFormatForDevice:</code>方法来选择捕获设备的格式。</li><li>如果没有可用的格式，则记录错误信息，并触发断言，然后退出。</li><li>最后，它调用<code>selectFpsForFormat:</code>方法来选择帧率，并调用<code>startCaptureWithDevice:format:fps:completionHandler:</code>方法来启动捕获。</li></ul><p>上面的函数有几处比较重要比如:</p><ol><li>如何选择像素格式？</li><li>如何选择采集帧率？</li></ol><p>这里不单独展开说明，后面第 4 小点会来统一解答文章开始的问题。</p><p>最后，我们接着看 <code>startCaptureWithDevice</code> 函数</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>- (void)startCaptureWithDevice:(AVCaptureDevice *)device\n                        format:(AVCaptureDeviceFormat *)format\n                           fps:(NSInteger)fps\n             completionHandler:(nullable void (^)(NSError *_Nullable error))completionHandler {\n  _willBeRunning = YES;\n  [RTC_OBJC_TYPE(RTCDispatcher)\n      dispatchAsyncOnType:RTCDispatcherTypeCaptureSession\n                    block:^{\n                      RTCLogInfo(&quot;startCaptureWithDevice %@ @ %ld fps&quot;, format, (long)fps);\n...\n                      self.currentDevice = device;\n                      NSError *error = nil;\n                      //第一步\n                      if (![self.currentDevice lockForConfiguration:&amp;error]) {\n...\n                        return;\n                      }\n                      //第二步\n                      [self reconfigureCaptureSessionInput];\n                      //第三步\n                      [self updateOrientation];\n                      //第四步\n                      [self updateDeviceCaptureFormat:format fps:fps];\n                      //第五步\n                      [self updateVideoDataOutputPixelFormat:format];\n                      //第六步\n                      [self.captureSession startRunning];\n                      //第七步\n                      [self.currentDevice unlockForConfiguration];\n                      self.isRunning = YES;\n                      if (completionHandler) {\n                        completionHandler(nil);\n                      }\n                    }];\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个函数<code>startCaptureWithDevice:format:fps:completionHandler:</code>主要用于启动视频捕获，下面是对其不同步骤的分析：</p><p><strong>第一步: 锁定捕获设备配置</strong></p><ul><li>这是一项关键操作，它尝试锁定当前采集设备的配置，以便可以更改它。</li><li>如果锁定失败，它会生成一个错误，并直接返回，不执行后续的操作。</li></ul><p><strong>第二步: 重新配置捕获会话输入</strong></p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>reconfigureCaptureSessionInput <span class="token punctuation">{</span>\n  <span class="token function">NSAssert</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCDispatcher<span class="token punctuation">)</span> isOnQueueForType<span class="token punctuation">:</span>RTCDispatcherTypeCaptureSession<span class="token punctuation">]</span><span class="token punctuation">,</span>\n           <span class="token string">@&quot;reconfigureCaptureSessionInput must be called on the capture queue.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  NSError <span class="token operator">*</span>error <span class="token operator">=</span> nil<span class="token punctuation">;</span>\n  AVCaptureDeviceInput <span class="token operator">*</span>input <span class="token operator">=</span>\n      <span class="token punctuation">[</span>AVCaptureDeviceInput deviceInputWithDevice<span class="token punctuation">:</span>_currentDevice error<span class="token punctuation">:</span><span class="token operator">&amp;</span>error<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>input<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">RTCLogError</span><span class="token punctuation">(</span><span class="token string">@&quot;Failed to create front camera input: %@&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>localizedDescription<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">[</span>_captureSession beginConfiguration<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>AVCaptureDeviceInput <span class="token operator">*</span>oldInput <span class="token keyword">in</span> <span class="token punctuation">[</span>_captureSession<span class="token punctuation">.</span>inputs copy<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>_captureSession removeInput<span class="token punctuation">:</span>oldInput<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>_captureSession canAddInput<span class="token punctuation">:</span>input<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>_captureSession addInput<span class="token punctuation">:</span>input<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token function">RTCLogError</span><span class="token punctuation">(</span><span class="token string">@&quot;Cannot add camera as an input to the session.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">[</span>_captureSession commitConfiguration<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个函数 <code>reconfigureCaptureSessionInput</code>，主要用于重新配置捕获会话的输入，下面是这个函数的详细解释：</p><ol><li>创建捕获设备输入： <ul><li>使用 <code>_currentDevice</code> 创建一个 <code>AVCaptureDeviceInput</code> 对象 <code>input</code>。这个 <code>input</code> 是一个表示摄像头设备输入的对象。</li></ul></li><li>检查输入创建是否成功： <ul><li>如果创建 <code>input</code> 失败，即 <code>_currentDevice</code> 不可用或其他错误，会记录错误信息到日志，并直接返回函数，不再执行后续操作。</li></ul></li><li>开始配置捕获会话： <ul><li>使用 <code>_captureSession</code> 的 <code>beginConfiguration</code> 方法，开始配置捕获会话。在这之后，可以对会话进行配置操作，而这些配置操作将在调用 <code>commitConfiguration</code> 之后一起生效。</li></ul></li><li>移除旧的输入： <ul><li>使用 <code>for-in</code> 循环遍历 <code>_captureSession.inputs</code> 中的所有输入（通常是之前的摄像头输入）。</li><li>通过 <code>_captureSession</code> 的 <code>removeInput:</code> 方法将每个旧输入从会话中移除。这是为了清除之前可能存在的摄像头输入，以便替换为新的输入。</li></ul></li><li>添加新的输入： <ul><li>检查 <code>_captureSession</code> 是否可以添加新的摄像头输入 <code>input</code>，如果可以，使用 <code>_captureSession</code> 的 <code>addInput:</code> 方法将新的输入添加到会话中。这样就将当前设备的摄像头输入配置到了捕获会话中。</li></ul></li><li>提交会话配置： <ul><li>使用 <code>_captureSession</code> 的 <code>commitConfiguration</code> 方法，提交捕获会话的配置，使之生效。</li></ul></li></ol><p>该函数验证了开始说的步骤第2点的配置输入设备到 采集会话中。</p><p><strong>第三步: 更新当前设备的旋转方向</strong></p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>updateOrientation <span class="token punctuation">{</span>\n  <span class="token function">NSAssert</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCDispatcher<span class="token punctuation">)</span> isOnQueueForType<span class="token punctuation">:</span>RTCDispatcherTypeCaptureSession<span class="token punctuation">]</span><span class="token punctuation">,</span>\n           <span class="token string">@&quot;updateOrientation must be called on the capture queue.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">TARGET_OS_IPHONE</span></span>\n  _orientation <span class="token operator">=</span> <span class="token punctuation">[</span>UIDevice currentDevice<span class="token punctuation">]</span><span class="token punctuation">.</span>orientation<span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据设备的方向，会在采集输出的视频数据中更新方向。</p><p><strong>第四步: 更新设备采集格式和帧率</strong></p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>updateDeviceCaptureFormat<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureDeviceFormat <span class="token operator">*</span><span class="token punctuation">)</span>format fps<span class="token punctuation">:</span><span class="token punctuation">(</span>NSInteger<span class="token punctuation">)</span>fps <span class="token punctuation">{</span>\n  <span class="token function">NSAssert</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCDispatcher<span class="token punctuation">)</span> isOnQueueForType<span class="token punctuation">:</span>RTCDispatcherTypeCaptureSession<span class="token punctuation">]</span><span class="token punctuation">,</span>\n           <span class="token string">@&quot;updateDeviceCaptureFormat must be called on the capture queue.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">@try</span> <span class="token punctuation">{</span>\n    _currentDevice<span class="token punctuation">.</span>activeFormat <span class="token operator">=</span> format<span class="token punctuation">;</span>\n    _currentDevice<span class="token punctuation">.</span>activeVideoMinFrameDuration <span class="token operator">=</span> <span class="token function">CMTimeMake</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> fps<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">@catch</span> <span class="token punctuation">(</span>NSException <span class="token operator">*</span>exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">RTCLogError</span><span class="token punctuation">(</span><span class="token string">@&quot;Failed to set active format!\\n User info:%@&quot;</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第五步: 更新视频数据输出像素格式</strong></p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>updateVideoDataOutputPixelFormat<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureDeviceFormat <span class="token operator">*</span><span class="token punctuation">)</span>format <span class="token punctuation">{</span>\n  FourCharCode mediaSubType <span class="token operator">=</span> <span class="token function">CMFormatDescriptionGetMediaSubType</span><span class="token punctuation">(</span>format<span class="token punctuation">.</span>formatDescription<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCVPixelBuffer<span class="token punctuation">)</span> supportedPixelFormats<span class="token punctuation">]</span> containsObject<span class="token punctuation">:</span><span class="token operator">@</span><span class="token punctuation">(</span>mediaSubType<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    mediaSubType <span class="token operator">=</span> _preferredOutputPixelFormat<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>mediaSubType <span class="token operator">!=</span> _outputPixelFormat<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _outputPixelFormat <span class="token operator">=</span> mediaSubType<span class="token punctuation">;</span>\n    _videoDataOutput<span class="token punctuation">.</span>videoSettings <span class="token operator">=</span>\n        <span class="token operator">@</span><span class="token punctuation">{</span> <span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>kCVPixelBufferPixelFormatTypeKey <span class="token punctuation">:</span> <span class="token operator">@</span><span class="token punctuation">(</span>mediaSubType<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第六步: 启动捕获会话</strong></p><ul><li>通过调用 <code>[self.captureSession startRunning]</code> 来启动捕获会话，这是实际开始捕获视频帧的地方。</li></ul><p><strong>第七步: 解锁捕获设备配置</strong></p><ul><li>解锁之前锁定的捕获设备的配置，以允许其他应用程序或操作使用设备。</li></ul><p>这个函数主要负责视频捕获的启动过程，包括锁定和配置摄像头设备、更新会话设置、启动会话以及在完成时通知回调。这是一个多步骤的过程，通过异步分派在后台线程中执行，以确保不会阻塞主线程。</p><p>并且在这个函数中也验证了开始的 第三点和第4点流程，由此现在正是的开始采集了。</p><h3 id="_3-2-采集输出" tabindex="-1"><a class="header-anchor" href="#_3-2-采集输出" aria-hidden="true">#</a> 3.2 采集输出</h3><p>在上面 3.1 小节中介绍了 <code>setSampleBufferDelegate</code> 函数，它的第一个参数就是采集回调</p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>setSampleBufferDelegate<span class="token punctuation">:</span><span class="token punctuation">(</span>nullable id<span class="token operator">&lt;</span>AVCaptureVideoDataOutputSampleBufferDelegate<span class="token operator">&gt;</span><span class="token punctuation">)</span>sampleBufferDelegate queue<span class="token punctuation">:</span><span class="token punctuation">(</span>nullable dispatch_queue_t<span class="token punctuation">)</span>sampleBufferCallbackQueue<span class="token punctuation">;</span>\n\n<span class="token function">API_AVAILABLE</span><span class="token punctuation">(</span><span class="token function">macos</span><span class="token punctuation">(</span><span class="token number">10.7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">ios</span><span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">macCatalyst</span><span class="token punctuation">(</span><span class="token number">14.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">API_UNAVAILABLE</span><span class="token punctuation">(</span>tvos<span class="token punctuation">)</span> <span class="token function">API_UNAVAILABLE</span><span class="token punctuation">(</span>watchos<span class="token punctuation">)</span>\n<span class="token keyword">@protocol</span> AVCaptureVideoDataOutputSampleBufferDelegate <span class="token operator">&lt;</span>NSObject<span class="token operator">&gt;</span>\n\n<span class="token operator">@</span>optional\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>captureOutput<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureOutput <span class="token operator">*</span><span class="token punctuation">)</span>output didOutputSampleBuffer<span class="token punctuation">:</span><span class="token punctuation">(</span>CMSampleBufferRef<span class="token punctuation">)</span>sampleBuffer fromConnection<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureConnection <span class="token operator">*</span><span class="token punctuation">)</span>connection<span class="token punctuation">;</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>captureOutput<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureOutput <span class="token operator">*</span><span class="token punctuation">)</span>output didDropSampleBuffer<span class="token punctuation">:</span><span class="token punctuation">(</span>CMSampleBufferRef<span class="token punctuation">)</span>sampleBuffer fromConnection<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureConnection <span class="token operator">*</span><span class="token punctuation">)</span>connection <span class="token function">API_AVAILABLE</span><span class="token punctuation">(</span><span class="token function">ios</span><span class="token punctuation">(</span><span class="token number">6.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">macCatalyst</span><span class="token punctuation">(</span><span class="token number">14.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">API_UNAVAILABLE</span><span class="token punctuation">(</span>tvos<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">@end</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要实现这两个函数，就能接收采集视频的回调了，那么这两个函数有什么区别呢？</p><ul><li><code>captureOutput:didOutputSampleBuffer:fromConnection:</code> 这个方法主要用于处理捕获到的视频帧数据，它在 macOS 和 iOS 平台上可用，也支持 Mac Catalyst。</li><li><code>captureOutput:didDropSampleBuffer:fromConnection:</code> 这个方法在视频帧被丢弃（即丢失）时被调用，通常用于报告帧的丢失情况。它在 iOS 和 Mac Catalyst 上可用，但不支持 tvOS。</li></ul><p>这里我们只关注视频帧输出，所以直接看第一个函数的实现:</p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">mark AVCaptureVideoDataOutputSampleBufferDelegate</span></span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>captureOutput<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureOutput <span class="token operator">*</span><span class="token punctuation">)</span>captureOutput\n    didOutputSampleBuffer<span class="token punctuation">:</span><span class="token punctuation">(</span>CMSampleBufferRef<span class="token punctuation">)</span>sampleBuffer\n           fromConnection<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureConnection <span class="token operator">*</span><span class="token punctuation">)</span>connection <span class="token punctuation">{</span>\n  <span class="token comment">//第一步</span>\n  <span class="token function">NSParameterAssert</span><span class="token punctuation">(</span>captureOutput <span class="token operator">==</span> _videoDataOutput<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">CMSampleBufferGetNumSamples</span><span class="token punctuation">(</span>sampleBuffer<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">CMSampleBufferIsValid</span><span class="token punctuation">(</span>sampleBuffer<span class="token punctuation">)</span> <span class="token operator">||</span>\n      <span class="token operator">!</span><span class="token function">CMSampleBufferDataIsReady</span><span class="token punctuation">(</span>sampleBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  CVPixelBufferRef pixelBuffer <span class="token operator">=</span> <span class="token function">CMSampleBufferGetImageBuffer</span><span class="token punctuation">(</span>sampleBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>pixelBuffer <span class="token operator">==</span> nil<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">TARGET_OS_IPHONE</span></span>\n  BOOL usingFrontCamera <span class="token operator">=</span> NO<span class="token punctuation">;</span>\n  <span class="token comment">//第二步</span>\n  AVCaptureDevicePosition cameraPosition <span class="token operator">=</span>\n      <span class="token punctuation">[</span>AVCaptureSession devicePositionForSampleBuffer<span class="token punctuation">:</span>sampleBuffer<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>cameraPosition <span class="token operator">!=</span> AVCaptureDevicePositionUnspecified<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    usingFrontCamera <span class="token operator">=</span> AVCaptureDevicePositionFront <span class="token operator">==</span> cameraPosition<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    AVCaptureDeviceInput <span class="token operator">*</span>deviceInput <span class="token operator">=</span>\n        <span class="token punctuation">(</span>AVCaptureDeviceInput <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>AVCaptureInputPort <span class="token operator">*</span><span class="token punctuation">)</span>connection<span class="token punctuation">.</span>inputPorts<span class="token punctuation">.</span>firstObject<span class="token punctuation">)</span><span class="token punctuation">.</span>input<span class="token punctuation">;</span>\n    usingFrontCamera <span class="token operator">=</span> AVCaptureDevicePositionFront <span class="token operator">==</span> deviceInput<span class="token punctuation">.</span>device<span class="token punctuation">.</span>position<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//第三步</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>_orientation<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> UIDeviceOrientationPortrait<span class="token punctuation">:</span>\n      _rotation <span class="token operator">=</span> RTCVideoRotation_90<span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> UIDeviceOrientationPortraitUpsideDown<span class="token punctuation">:</span>\n      _rotation <span class="token operator">=</span> RTCVideoRotation_270<span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> UIDeviceOrientationLandscapeLeft<span class="token punctuation">:</span>\n      _rotation <span class="token operator">=</span> usingFrontCamera <span class="token operator">?</span> RTCVideoRotation_180 <span class="token punctuation">:</span> RTCVideoRotation_0<span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> UIDeviceOrientationLandscapeRight<span class="token punctuation">:</span>\n      _rotation <span class="token operator">=</span> usingFrontCamera <span class="token operator">?</span> RTCVideoRotation_0 <span class="token punctuation">:</span> RTCVideoRotation_180<span class="token punctuation">;</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> UIDeviceOrientationFaceUp<span class="token punctuation">:</span>\n    <span class="token keyword">case</span> UIDeviceOrientationFaceDown<span class="token punctuation">:</span>\n    <span class="token keyword">case</span> UIDeviceOrientationUnknown<span class="token punctuation">:</span>\n      <span class="token comment">// Ignore.</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>\n  <span class="token comment">// No rotation on Mac.</span>\n  _rotation <span class="token operator">=</span> RTCVideoRotation_0<span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n<span class="token comment">//第四步</span>\n  <span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCVPixelBuffer<span class="token punctuation">)</span> <span class="token operator">*</span>rtcPixelBuffer <span class="token operator">=</span>\n      <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCVPixelBuffer<span class="token punctuation">)</span> alloc<span class="token punctuation">]</span> initWithPixelBuffer<span class="token punctuation">:</span>pixelBuffer<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  int64_t timeStampNs <span class="token operator">=</span> <span class="token function">CMTimeGetSeconds</span><span class="token punctuation">(</span><span class="token function">CMSampleBufferGetPresentationTimeStamp</span><span class="token punctuation">(</span>sampleBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span>\n      kNanosecondsPerSecond<span class="token punctuation">;</span>\n  <span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCVideoFrame<span class="token punctuation">)</span> <span class="token operator">*</span>videoFrame <span class="token operator">=</span>\n      <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCVideoFrame<span class="token punctuation">)</span> alloc<span class="token punctuation">]</span> initWithBuffer<span class="token punctuation">:</span>rtcPixelBuffer\n                                                  rotation<span class="token punctuation">:</span>_rotation\n                                               timeStampNs<span class="token punctuation">:</span>timeStampNs<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>delegate capturer<span class="token punctuation">:</span><span class="token keyword">self</span> didCaptureVideoFrame<span class="token punctuation">:</span>videoFrame<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第一步</strong>：参数验证和有效性检查</p><ul><li>代码首先通过 <code>NSParameterAssert</code> 验证 <code>captureOutput</code> 是否等于 <code>_videoDataOutput</code>，确保回调是由正确的输出对象触发的。</li><li>接着，它对 <code>sampleBuffer</code> 进行多项有效性检查： <ul><li>检查样本缓冲中的样本数是否为1，以确保只有一个样本。</li><li>检查样本缓冲是否有效，以确保它不为空或损坏。</li><li>检查样本缓冲数据是否准备就绪，以确保可以安全地访问数据。</li></ul></li></ul><p><strong>第二步</strong>：确定摄像头使用情况（IOS）</p><ul><li>代码根据摄像头的位置来确定是否使用前置摄像头。这里有两种方式来确定： <ul><li>首先，它尝试从 <code>sampleBuffer</code> 中获取摄像头位置信息，如果可用，则根据摄像头位置确定是否使用前置摄像头。</li><li>如果无法从 <code>sampleBuffer</code> 中获取位置信息，则通过检查连接的输入端口来判断是否使用前置摄像头。</li></ul></li></ul><p><strong>第三步</strong>：确定视频旋转角度（IOS）</p><ul><li>根据设备的方向（<code>_orientation</code>）以及摄像头使用情况（前置或后置），确定视频的旋转角度（<code>_rotation</code>）。不同的设备方向和摄像头使用情况会导致不同的旋转角度，以确保视频帧的正确方向显示。</li></ul><p><strong>第四步</strong>：创建并传递视频帧</p><ul><li>代码创建了一个 <code>RTCVideoFrame</code> 对象，其中包含了视频数据（从 <code>pixelBuffer</code> 创建），旋转信息（从第三步确定的 <code>_rotation</code>），以及时间戳信息（从样本缓冲的时间戳获取）。</li><li>最后，将采集的视频帧传递给代理对象(用于编码或者预览)。</li></ul><p>总结：这段采集代码主要完成了视频捕获后的处理和传递。它首先验证和检查参数的有效性，然后根据摄像头使用情况和设备方向确定视频的旋转角度，最后将采集到的视频帧以代理的形式传递给编码或预览。通过这四个步骤完成了视频采集后的处理流程。</p><h2 id="_4-解答" tabindex="-1"><a class="header-anchor" href="#_4-解答" aria-hidden="true">#</a> 4. 解答</h2><p>通过上面 3 大点的介绍，其实陆陆续续的已经介绍答案了。这里我们再进行总结一下吧</p><h3 id="_4-1-如何自定义视频大小和图像格式" tabindex="-1"><a class="header-anchor" href="#_4-1-如何自定义视频大小和图像格式" aria-hidden="true">#</a> 4.1 如何自定义视频大小和图像格式</h3><p>通过如下代码获取当前设备的采集大小和图像格式:</p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span>AVCaptureDeviceFormat <span class="token operator">*</span><span class="token punctuation">)</span>selectFormatForDevice<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureDevice <span class="token operator">*</span><span class="token punctuation">)</span>device <span class="token punctuation">{</span>\n  NSArray<span class="token operator">&lt;</span>AVCaptureDeviceFormat <span class="token operator">*</span><span class="token operator">&gt;</span> <span class="token operator">*</span>formats <span class="token operator">=</span>\n      <span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCameraVideoCapturer<span class="token punctuation">)</span> supportedFormatsForDevice<span class="token punctuation">:</span>device<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    \n    \n    <span class="token comment">// 遍历并打印每个格式的信息</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span>AVCaptureDeviceFormat <span class="token operator">*</span>format <span class="token keyword">in</span> formats<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        CMFormatDescriptionRef formatDescription <span class="token operator">=</span> format<span class="token punctuation">.</span>formatDescription<span class="token punctuation">;</span>\n        \n        <span class="token comment">// 获取格式的详细信息</span>\n        CMVideoDimensions dimensions <span class="token operator">=</span> <span class="token function">CMVideoFormatDescriptionGetDimensions</span><span class="token punctuation">(</span>formatDescription<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        FourCharCode pixelFormat <span class="token operator">=</span> <span class="token function">CMFormatDescriptionGetMediaSubType</span><span class="token punctuation">(</span>formatDescription<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> frameRate <span class="token operator">=</span> <span class="token punctuation">[</span>format<span class="token punctuation">.</span>videoSupportedFrameRateRanges<span class="token punctuation">.</span>firstObject maxFrameRate<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 获取最大帧率</span>\n        NSString <span class="token operator">*</span>pixelFormatString <span class="token operator">=</span> nil<span class="token punctuation">;</span>\n        <span class="token comment">// 打印格式信息</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>pixelFormat<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">case</span> kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange<span class="token punctuation">:</span>\n                pixelFormatString <span class="token operator">=</span> <span class="token string">@&quot;NV12&quot;</span><span class="token punctuation">;</span> <span class="token comment">// YUV 4:2:0, planar, 8-bit, video-range</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> kCVPixelFormatType_420YpCbCr8BiPlanarFullRange<span class="token punctuation">:</span>\n                pixelFormatString <span class="token operator">=</span> <span class="token string">@&quot;NV21&quot;</span><span class="token punctuation">;</span> <span class="token comment">// YUV 4:2:0, planar, 8-bit, full-range</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> kCVPixelFormatType_422YpCbCr8<span class="token punctuation">:</span>\n                pixelFormatString <span class="token operator">=</span> <span class="token string">@&quot;YUYV&quot;</span><span class="token punctuation">;</span> <span class="token comment">// YUV 4:2:2, packed, 8-bit</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> kCVPixelFormatType_32BGRA<span class="token punctuation">:</span>\n                pixelFormatString <span class="token operator">=</span> <span class="token string">@&quot;BGRA&quot;</span><span class="token punctuation">;</span> <span class="token comment">// RGB 32-bit</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> kCVPixelFormatType_32ARGB<span class="token punctuation">:</span>\n                pixelFormatString <span class="token operator">=</span> <span class="token string">@&quot;ARGB&quot;</span><span class="token punctuation">;</span> <span class="token comment">// RGB 32-bit</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">default</span><span class="token punctuation">:</span>\n                pixelFormatString <span class="token operator">=</span> <span class="token string">@&quot;Unknown&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;supportedFormatsForDevice: Width=%d, Height=%d, PixelFormat=%@&quot;</span><span class="token punctuation">,</span> dimensions<span class="token punctuation">.</span>width<span class="token punctuation">,</span> dimensions<span class="token punctuation">.</span>height<span class="token punctuation">,</span> pixelFormatString<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token comment">/**自定义输出的视频大小,会选择最为合适的*/</span>\n  <span class="token keyword">int</span> targetWidth <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> targetHeight <span class="token operator">=</span> <span class="token number">720</span><span class="token punctuation">;</span>\n  AVCaptureDeviceFormat <span class="token operator">*</span>selectedFormat <span class="token operator">=</span> nil<span class="token punctuation">;</span>\n  <span class="token keyword">int</span> currentDiff <span class="token operator">=</span> INT_MAX<span class="token punctuation">;</span>\n\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>AVCaptureDeviceFormat <span class="token operator">*</span>format <span class="token keyword">in</span> formats<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    CMVideoDimensions dimension <span class="token operator">=</span> <span class="token function">CMVideoFormatDescriptionGetDimensions</span><span class="token punctuation">(</span>format<span class="token punctuation">.</span>formatDescription<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    FourCharCode pixelFormat <span class="token operator">=</span> <span class="token function">CMFormatDescriptionGetMediaSubType</span><span class="token punctuation">(</span>format<span class="token punctuation">.</span>formatDescription<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">int</span> diff <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span>targetWidth <span class="token operator">-</span> dimension<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span>targetHeight <span class="token operator">-</span> dimension<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>diff <span class="token operator">&lt;</span> currentDiff<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      selectedFormat <span class="token operator">=</span> format<span class="token punctuation">;</span>\n      currentDiff <span class="token operator">=</span> diff<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>diff <span class="token operator">==</span> currentDiff <span class="token operator">&amp;&amp;</span> pixelFormat <span class="token operator">==</span> <span class="token punctuation">[</span>_capturer preferredOutputPixelFormat<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      selectedFormat <span class="token operator">=</span> format<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> selectedFormat<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印如下:</p><p><strong>MAC M1:</strong></p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>supportedFormatsForDevice: Width=1920, Height=1080, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1280, Height=720, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1080, Height=1920, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1760, Height=1328, PixelFormat=NV12\nsupportedFormatsForDevice: Width=640, Height=480, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1328, Height=1760, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1552, Height=1552, PixelFormat=NV12\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>IPhone:</strong></p><div class="language-tex line-numbers-mode" data-ext="tex"><pre class="language-tex"><code>supportedFormatsForDevice: Width=192, Height=144, PixelFormat=NV12\nsupportedFormatsForDevice: Width=192, Height=144, PixelFormat=NV21\nsupportedFormatsForDevice: Width=352, Height=288, PixelFormat=NV12\nsupportedFormatsForDevice: Width=352, Height=288, PixelFormat=NV21\nsupportedFormatsForDevice: Width=480, Height=360, PixelFormat=NV12\nsupportedFormatsForDevice: Width=480, Height=360, PixelFormat=NV21\nsupportedFormatsForDevice: Width=640, Height=480, PixelFormat=NV12\nsupportedFormatsForDevice: Width=640, Height=480, PixelFormat=NV21\nsupportedFormatsForDevice: Width=640, Height=480, PixelFormat=NV12\nsupportedFormatsForDevice: Width=640, Height=480, PixelFormat=NV21\nsupportedFormatsForDevice: Width=960, Height=540, PixelFormat=NV12\nsupportedFormatsForDevice: Width=960, Height=540, PixelFormat=NV21\nsupportedFormatsForDevice: Width=1024, Height=768, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1024, Height=768, PixelFormat=NV21\nsupportedFormatsForDevice: Width=1280, Height=720, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1280, Height=720, PixelFormat=NV21\nsupportedFormatsForDevice: Width=1280, Height=720, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1280, Height=720, PixelFormat=NV21\nsupportedFormatsForDevice: Width=1440, Height=1080, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1440, Height=1080, PixelFormat=NV21\nsupportedFormatsForDevice: Width=1920, Height=1080, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1920, Height=1080, PixelFormat=NV21\nsupportedFormatsForDevice: Width=1920, Height=1440, PixelFormat=NV12\nsupportedFormatsForDevice: Width=1920, Height=1440, PixelFormat=NV21\nsupportedFormatsForDevice: Width=3088, Height=2320, PixelFormat=NV12\nsupportedFormatsForDevice: Width=3088, Height=2320, PixelFormat=NV21\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由此看出，在苹果设备上最通用的其实是 <strong>nv12</strong> 像素格式，其中 IOS 通过遍历出来得到了 [NV12,NV21] , MAC 得到了 [NV12] 格式。</p><h3 id="_4-2-如何设置帧率" tabindex="-1"><a class="header-anchor" href="#_4-2-如何设置帧率" aria-hidden="true">#</a> 4.2 如何设置帧率</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span>NSInteger<span class="token punctuation">)</span>selectFpsForFormat<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureDeviceFormat <span class="token operator">*</span><span class="token punctuation">)</span>format <span class="token punctuation">{</span>\n  Float64 maxSupportedFramerate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>AVFrameRateRange <span class="token operator">*</span>fpsRange <span class="token keyword">in</span> format<span class="token punctuation">.</span>videoSupportedFrameRateRanges<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    maxSupportedFramerate <span class="token operator">=</span> <span class="token function">fmax</span><span class="token punctuation">(</span>maxSupportedFramerate<span class="token punctuation">,</span> fpsRange<span class="token punctuation">.</span>maxFrameRate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;selectFpsForFormat %f&quot;</span><span class="token punctuation">,</span> maxSupportedFramerate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token function">fmin</span><span class="token punctuation">(</span>maxSupportedFramerate<span class="token punctuation">,</span> kFramerateLimit<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>updateDeviceCaptureFormat<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureDeviceFormat <span class="token operator">*</span><span class="token punctuation">)</span>format fps<span class="token punctuation">:</span><span class="token punctuation">(</span>NSInteger<span class="token punctuation">)</span>fps <span class="token punctuation">{</span>\n  <span class="token function">NSAssert</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCDispatcher<span class="token punctuation">)</span> isOnQueueForType<span class="token punctuation">:</span>RTCDispatcherTypeCaptureSession<span class="token punctuation">]</span><span class="token punctuation">,</span>\n           <span class="token string">@&quot;updateDeviceCaptureFormat must be called on the capture queue.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">@try</span> <span class="token punctuation">{</span>\n    _currentDevice<span class="token punctuation">.</span>activeFormat <span class="token operator">=</span> format<span class="token punctuation">;</span>\n    _currentDevice<span class="token punctuation">.</span>activeVideoMinFrameDuration <span class="token operator">=</span> <span class="token function">CMTimeMake</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> fps<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">@catch</span> <span class="token punctuation">(</span>NSException <span class="token operator">*</span>exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">RTCLogError</span><span class="token punctuation">(</span><span class="token string">@&quot;Failed to set active format!\\n User info:%@&quot;</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 IPhone 和 MAC 上均输出最大的采集帧率为 30fps，所以我们设置的时候需要根据 <code>format.videoSupportedFrameRateRanges</code> 范围去设置</p><h3 id="_4-3-前后摄像头之间如何切换" tabindex="-1"><a class="header-anchor" href="#_4-3-前后摄像头之间如何切换" aria-hidden="true">#</a> 4.3 前后摄像头之间如何切换</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>  <span class="token comment">//拿到前后摄像头的 position</span>\n  AVCaptureDevicePosition position <span class="token operator">=</span>\n      _usingFrontCamera <span class="token operator">?</span> AVCaptureDevicePositionFront <span class="token punctuation">:</span> AVCaptureDevicePositionBack<span class="token punctuation">;</span>\n  <span class="token comment">//根据 position 去找到对应的摄像头设备</span>\n  AVCaptureDevice <span class="token operator">*</span>device <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">self</span> findDeviceForPosition<span class="token punctuation">:</span>position<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  \n<span class="token operator">-</span> <span class="token punctuation">(</span>AVCaptureDevice <span class="token operator">*</span><span class="token punctuation">)</span>findDeviceForPosition<span class="token punctuation">:</span><span class="token punctuation">(</span>AVCaptureDevicePosition<span class="token punctuation">)</span>position <span class="token punctuation">{</span>\n  NSArray<span class="token operator">&lt;</span>AVCaptureDevice <span class="token operator">*</span><span class="token operator">&gt;</span> <span class="token operator">*</span>captureDevices <span class="token operator">=</span>\n      <span class="token punctuation">[</span><span class="token function">RTC_OBJC_TYPE</span><span class="token punctuation">(</span>RTCCameraVideoCapturer<span class="token punctuation">)</span> captureDevices<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>AVCaptureDevice <span class="token operator">*</span>device <span class="token keyword">in</span> captureDevices<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>device<span class="token punctuation">.</span>position <span class="token operator">==</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> device<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> captureDevices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-ios-和-macos-代码的通用性" tabindex="-1"><a class="header-anchor" href="#_4-4-ios-和-macos-代码的通用性" aria-hidden="true">#</a> 4.4 IOS 和 MACOS 代码的通用性</h3><ul><li>通过第三大点的介绍，除了一些特定的配置外(通过平台宏配置)，基本上一套采集代码在 IOS 和 MACOS 是可以直接使用的.</li></ul><h2 id="_5-总结" tabindex="-1"><a class="header-anchor" href="#_5-总结" aria-hidden="true">#</a> 5.总结</h2><p>通过上面的 4 个大点，从采集基础到 webrtc 中的实际使用分析，每一个点都基本分析到了，现在你可以自己实现一套相机采集的功能了。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',79),Ht={href:"https://developer.apple.com/documentation/avfoundation/capture_setup/setting_up_a_capture_session",target:"_blank",rel:"noopener noreferrer"},Lt=(0,e._)("li",null,"https://objccn.io/issue-23-1/",-1),Yt={},Gt=(0,s(3744).Z)(Yt,[["render",function(n,a){const s=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)("div",null,[t,(0,e._)("p",null,[(0,e._)("a",o,[(0,e.Uk)("配置采集行为并协调从输入设备到采集输出的数据流的对象"),(0,e.Wm)(s)]),(0,e.Uk)("。")]),p,(0,e._)("h4",i,[l,(0,e.Uk)(" 2.1.1 "),(0,e._)("a",c,[(0,e.Uk)("配置会话"),(0,e.Wm)(s)])]),(0,e._)("table",null,[u,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",r,[d,(0,e.Wm)(s)])]),v]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",k,[m,(0,e.Wm)(s)])]),b])])]),_,(0,e._)("h4",f,[h,(0,e.Uk)(" 2.1.2 "),(0,e._)("a",g,[(0,e.Uk)("设置会话 preset"),(0,e.Wm)(s)])]),(0,e._)("table",null,[C,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",F,[V,(0,e.Wm)(s)])]),D]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",y,[A,(0,e.Wm)(s)])]),S])])]),x,(0,e._)("h4",P,[w,(0,e.Uk)(" 2.1.3 "),(0,e._)("a",W,[(0,e.Uk)("配置输入"),(0,e.Wm)(s)])]),(0,e._)("table",null,[O,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",j,[T,(0,e.Wm)(s)])]),I]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",R,[B,(0,e.Wm)(s)])]),N]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",E,[M,(0,e.Wm)(s)])]),U]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",q,[H,(0,e.Wm)(s)])]),L])])]),Y,(0,e._)("h4",G,[J,(0,e.Uk)(" 2.1.4 "),(0,e._)("a",z,[(0,e.Uk)("配置输出"),(0,e.Wm)(s)])]),(0,e._)("table",null,[Q,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Z,[K,(0,e.Wm)(s)])]),X]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",$,[nn,(0,e.Wm)(s)])]),an]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",sn,[en,(0,e.Wm)(s)])]),tn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",on,[pn,(0,e.Wm)(s)])]),ln])])]),cn,(0,e._)("table",null,[un,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",rn,[dn,(0,e.Wm)(s)])]),vn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",kn,[mn,(0,e.Wm)(s)])]),bn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",_n,[fn,(0,e.Wm)(s)])]),hn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",gn,[Cn,(0,e.Wm)(s)])]),Fn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Vn,[Dn,(0,e.Wm)(s)])]),yn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",An,[Sn,(0,e.Wm)(s)])]),xn])])]),Pn,(0,e._)("h4",wn,[Wn,(0,e.Uk)(" 2.1.6 "),(0,e._)("a",On,[(0,e.Uk)("管理会话生命周期"),(0,e.Wm)(s)])]),(0,e._)("table",null,[jn,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Tn,[In,(0,e.Wm)(s)])]),Rn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Bn,[Nn,(0,e.Wm)(s)])]),En])])]),Mn,(0,e._)("table",null,[Un,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",qn,[Hn,(0,e.Wm)(s)])]),Ln]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Yn,[Gn,(0,e.Wm)(s)])]),Jn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",zn,[Qn,(0,e.Wm)(s)])]),Zn]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Kn,[Xn,(0,e.Wm)(s)])]),$n]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",na,[aa,(0,e.Wm)(s)])]),sa]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ea,[ta,(0,e.Wm)(s)])]),oa])])]),(0,e._)("h4",pa,[ia,(0,e.Uk)(" 2.2.1 "),(0,e._)("a",la,[(0,e.Uk)("授权设备访问"),(0,e.Wm)(s)])]),(0,e._)("table",null,[ca,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ua,[ra,(0,e.Wm)(s)])]),da]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",va,[ka,(0,e.Wm)(s)])]),ma]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ba,[_a,(0,e.Wm)(s)])]),fa])])]),(0,e._)("h4",ha,[ga,(0,e.Uk)(" 2.2.2 "),(0,e._)("a",Ca,[(0,e.Uk)("识别设备"),(0,e.Wm)(s)])]),(0,e._)("table",null,[Fa,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Va,[Da,(0,e.Wm)(s)])]),ya]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Aa,[Sa,(0,e.Wm)(s)])]),xa]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Pa,[wa,(0,e.Wm)(s)])]),Wa]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Oa,[ja,(0,e.Wm)(s)])]),Ta]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ia,[Ra,(0,e.Wm)(s)])]),Ba]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Na,[Ea,(0,e.Wm)(s)])]),Ma]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ua,[qa,(0,e.Wm)(s)])]),Ha]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",La,[Ya,(0,e.Wm)(s)])]),Ga])])]),(0,e._)("h4",Ja,[za,(0,e.Uk)(" 2.2.3 "),(0,e._)("a",Qa,[(0,e.Uk)("配置相机硬件"),(0,e.Wm)(s)])]),(0,e._)("table",null,[Za,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ka,[Xa,(0,e.Wm)(s)])]),$a]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ns,[as,(0,e.Wm)(s)])]),ss])])]),es,(0,e._)("table",null,[ts,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",os,[ps,(0,e.Wm)(s)])]),is]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ls,[cs,(0,e.Wm)(s)])]),us])])]),rs,(0,e._)("table",null,[ds,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",vs,[(0,e.Uk)("Formats"),(0,e.Wm)(s)])]),ks])])]),ms,(0,e._)("table",null,[bs,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",_s,[(0,e.Uk)("Focus"),(0,e.Wm)(s)])]),fs])])]),hs,(0,e._)("table",null,[gs,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Cs,[(0,e.Uk)("Exposure"),(0,e.Wm)(s)])]),Fs])])]),Vs,(0,e._)("table",null,[Ds,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ys,[(0,e.Uk)("White Balance"),(0,e.Wm)(s)])]),As])])]),Ss,(0,e._)("table",null,[xs,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ps,[(0,e.Uk)("Lighting"),(0,e.Wm)(s)])]),ws])])]),Ws,(0,e._)("table",null,[Os,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",js,[(0,e.Uk)("Color"),(0,e.Wm)(s)])]),Ts])])]),Is,(0,e._)("table",null,[Rs,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Bs,[(0,e.Uk)("Zoom"),(0,e.Wm)(s)])]),Ns])])]),Es,(0,e._)("h4",Ms,[Us,(0,e.Uk)(" 2.3.1 "),(0,e._)("a",qs,[(0,e.Uk)("创建输入"),(0,e.Wm)(s)])]),(0,e._)("table",null,[Hs,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ls,[Ys,(0,e.Wm)(s)])]),Gs]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Js,[zs,(0,e.Wm)(s)])]),Qs])])]),Zs,(0,e._)("h4",Ks,[Xs,(0,e.Uk)(" 2.3.2 "),(0,e._)("a",$s,[(0,e.Uk)("配置输入属性"),(0,e.Wm)(s)])]),(0,e._)("table",null,[ne,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ae,[se,(0,e.Wm)(s)])]),ee]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",te,[oe,(0,e.Wm)(s)])]),pe])])]),ie,(0,e._)("h4",le,[ce,(0,e.Uk)(" 2.3.3 "),(0,e._)("a",ue,[(0,e.Uk)("访问设备"),(0,e.Wm)(s)])]),(0,e._)("table",null,[re,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",de,[ve,(0,e.Wm)(s)])]),ke]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",me,[be,(0,e.Wm)(s)])]),_e])])]),fe,(0,e._)("p",null,[(0,e.Uk)("采集输出，用于记录视频并提供对视频帧的访问以进行处理。继承至 "),(0,e._)("a",he,[ge,(0,e.Wm)(s)])]),(0,e._)("h4",Ce,[Fe,(0,e.Uk)(" 2.4.1 "),(0,e._)("a",Ve,[(0,e.Uk)("配置视频捕捉"),(0,e.Wm)(s)])]),(0,e._)("table",null,[De,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ye,[Ae,(0,e.Wm)(s)])]),Se]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",xe,[Pe,(0,e.Wm)(s)])]),we]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",We,[Oe,(0,e.Wm)(s)])]),je]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Te,[Ie,(0,e.Wm)(s)])]),Re]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Be,[Ne,(0,e.Wm)(s)])]),Ee]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Me,[Ue,(0,e.Wm)(s)])]),qe])])]),He,(0,e._)("h4",Le,[Ye,(0,e.Uk)(" 2.4.2 "),(0,e._)("a",Ge,[(0,e.Uk)("检索支持的视频类型"),(0,e.Wm)(s)])]),(0,e._)("table",null,[Je,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ze,[Qe,(0,e.Wm)(s)])]),Ze]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ke,[Xe,(0,e.Wm)(s)])]),$e]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",nt,[at,(0,e.Wm)(s)])]),st]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",et,[tt,(0,e.Wm)(s)])]),ot]),pt])]),it,(0,e._)("h4",lt,[ct,(0,e.Uk)(" 2.4.3 "),(0,e._)("a",ut,[(0,e.Uk)("接收采集的视频数据"),(0,e.Wm)(s)])]),(0,e._)("table",null,[rt,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",dt,[vt,(0,e.Wm)(s)])]),kt]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",mt,[bt,(0,e.Wm)(s)])]),_t]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",ft,[ht,(0,e.Wm)(s)])]),gt]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ct,[Ft,(0,e.Wm)(s)])]),Vt])])]),Dt,(0,e._)("h4",yt,[At,(0,e.Uk)(" 2.4.4 "),(0,e._)("a",St,[(0,e.Uk)("创建视频采集输出"),(0,e.Wm)(s)])]),(0,e._)("table",null,[xt,(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Pt,[wt,(0,e.Wm)(s)])]),Wt]),(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("a",Ot,[jt,(0,e.Wm)(s)])]),Tt])])]),It,(0,e._)("p",null,[(0,e.Uk)("我们继续看第二 > 三步，第三步内部是上面基础介绍到的设置会话的初始值，这里在 IOS 平台下设置了 "),(0,e._)("a",Rt,[(0,e.Uk)("AVCaptureSessionPresetInputPriority"),(0,e.Wm)(s)]),(0,e.Uk)(" 是什么意思呢？它其实就是 "),Bt,(0,e.Uk)(" 的一个预设值，它影响捕获会话的行为，特别是在同时使用多个捕获设备（例如摄像头和麦克风）时。这个预设值的作用是告诉捕获会话不要去强制控制音频和视频的输出设置，而是让已连接的捕获设备自己来控制输出的质量等级。")]),Nt,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("就是我们基础概念介绍到的 "),Et,(0,e.Uk)(" 它主要就是负责采集输出，用于记录视频并提供对视频帧的访问以进行处理。继承至 "),(0,e._)("a",Mt,[Ut,(0,e.Wm)(s)]),(0,e.Uk)(" 。")])]),qt,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",Ht,[(0,e.Uk)("Setting Up a Capture Session"),(0,e.Wm)(s)])]),Lt])])}]])}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[496],{1350:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-ba1464b6","path":"/pages/webrtc/WebRTC%E5%AE%9E%E6%88%98%20-%20mediasoup%E6%9E%B6%E6%9E%84%E7%9A%84%E5%A4%9A%E4%BA%BA%E9%9F%B3%E8%A7%86%E9%A2%91%E9%80%9A%E8%AF%9D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","title":"WebRTC 实战: mediasoup SFU 架构的多人音视频通话解决方案","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"SFU架构原理","slug":"sfu架构原理","link":"#sfu架构原理","children":[]},{"level":2,"title":"mediasoup","slug":"mediasoup","link":"#mediasoup","children":[{"level":3,"title":"架构","slug":"架构","link":"#架构","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":3,"title":"mediasoup-demo 部署","slug":"mediasoup-demo-部署","link":"#mediasoup-demo-部署","children":[]},{"level":3,"title":"mediasoup-web 部署","slug":"mediasoup-web-部署","link":"#mediasoup-web-部署","children":[]},{"level":3,"title":"mediasoup-android 部署","slug":"mediasoup-android-部署","link":"#mediasoup-android-部署","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1689560486000,"contributors":[{"name":"DevYK","email":"919079498@qq.com","commits":1}]},"filePathRelative":"pages/webrtc/WebRTC实战 - mediasoup架构的多人音视频通话解决方案.md"}')},2442:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var e=a(6252);const t=(0,e.uE)('<h1 id="webrtc-实战-mediasoup-sfu-架构的多人音视频通话解决方案" tabindex="-1"><a class="header-anchor" href="#webrtc-实战-mediasoup-sfu-架构的多人音视频通话解决方案" aria-hidden="true">#</a> WebRTC 实战: mediasoup SFU 架构的多人音视频通话解决方案</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>WebRTC 是一种实现实时音视频通信的开源技术，它能够在浏览器和移动应用中直接进行点对点的数据传输。然而，要实现大规模的多人音视频通话，就需要引入更复杂的服务器端组件，这就是我们要讲的 mediasoup。mediasoup 是一个功能强大的 WebRTC SFU(Selective Forwarding Unit) 实现，它可以处理大量的音视频流，为开发者提供了实现多人音视频通话的解决方案。</p><p>这是我们搭建完，运行的效果图</p><p><img src="http://devyk.top/2022/202305271722804.png" alt="image-20230527172224121"></p><h2 id="sfu架构原理" tabindex="-1"><a class="header-anchor" href="#sfu架构原理" aria-hidden="true">#</a> SFU架构原理</h2><p>SFU是指选择性转发单元，用于多人实时音视频通话的场景。在SFU架构中，每个参与者将他的媒体流发送到SFU服务器，SFU服务器再将其转发到所有其他的参与者。这种架构相比于P2P架构，可以节省带宽，并且可以更容易地进行流量控制和质量调整。</p><h2 id="mediasoup" tabindex="-1"><a class="header-anchor" href="#mediasoup" aria-hidden="true">#</a> mediasoup</h2><h3 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h3><p>mediasoup 是一个以 SFU 为核心的 WebRTC 服务器框架，它提供了多路音视频流的能力。mediasoup 可以运行在服务器上，处理所有传入和传出的流，包括音频、视频和数据。由于其模块化的设计，mediasoup 可以轻松地集成到任何应用程序中。</p><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h3><p>mediasoup 使用 RTP over UDP 进行音视频传输，这是一种实时传输协议，可以在网络中实现音视频的实时传输。mediasoup 通过使用 DTLS/SRTP 进行加密，保证了传输的安全性。</p><p>此外，mediasoup 还提供了强大的 API，使得开发者可以控制房间、生产者、消费者等实体，同时也可以进行编解码器的选择、转发策略的控制等。</p><h3 id="mediasoup-demo-部署" tabindex="-1"><a class="header-anchor" href="#mediasoup-demo-部署" aria-hidden="true">#</a> mediasoup-demo 部署</h3><p>https://mediasoup.org/documentation/v3/mediasoup/installation/#requirements</p>',15),p={href:"https://github.com/versatica/mediasoup-demo",target:"_blank",rel:"noopener noreferrer"},i=(0,e.uE)('<h4 id="_1-安装通用依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装通用依赖" aria-hidden="true">#</a> 1. 安装通用依赖</h4><p>如官方介绍，我们需要在编译之前先安装必要的依赖</p><ul><li>Node.js version &gt;= v16.0.0</li><li>Python version &gt;= 3.7 &amp; python3-pip</li></ul><h4 id="_2-下载代码" tabindex="-1"><a class="header-anchor" href="#_2-下载代码" aria-hidden="true">#</a> 2. 下载代码</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/versatica/mediasoup-demo.git\n<span class="token builtin class-name">cd</span> mediasoup-demo\n<span class="token function">git</span> checkout v3\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-安装服务依赖" tabindex="-1"><a class="header-anchor" href="#_3-安装服务依赖" aria-hidden="true">#</a> 3. 安装服务依赖</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> server\n<span class="token assign-left variable">PYTHON</span><span class="token operator">=</span>python3.9 <span class="token function">npm</span> <span class="token function">install</span> mediasoup@3 <span class="token parameter variable">--save</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-配置-mediasoup-demo" tabindex="-1"><a class="header-anchor" href="#_4-配置-mediasoup-demo" aria-hidden="true">#</a> 4. 配置 mediasoup-demo</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> config.example.js config.js\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置对应的 ip</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * IMPORTANT (PLEASE READ THIS):\n *\n * This is not the &quot;configuration file&quot; of mediasoup. This is the configuration\n * file of the mediasoup-demo app. mediasoup itself is a server-side library, it\n * does not read any &quot;configuration file&quot;. Instead it exposes an API. This demo\n * application just reads settings from this file (once copied to config.js) and\n * calls the mediasoup API with those settings when appropriate.\n */</span>\n\n<span class="token keyword">const</span> os <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span>\n<span class="token punctuation">{</span>\n\t<span class="token literal-property property">domain</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DOMAIN</span> <span class="token operator">||</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>\n\t<span class="token literal-property property">https</span>  <span class="token operator">:</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token literal-property property">listenIp</span>   <span class="token operator">:</span> <span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">listenPort</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PROTOO_LISTEN_PORT</span> <span class="token operator">||</span> <span class="token number">4443</span><span class="token punctuation">,</span> <span class="token comment">// 1. 配置信令服务器 ip</span>\n\t\t<span class="token literal-property property">tls</span>        <span class="token operator">:</span> <span class="token comment">//2. 配置 https 证书</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token literal-property property">cert</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">HTTPS_CERT_FULLCHAIN</span> <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/certs/fullchain.pem</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n\t\t\t<span class="token literal-property property">key</span>  <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">HTTPS_CERT_PRIVKEY</span> <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/certs/privkey.pem</span><span class="token template-punctuation string">`</span></span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token literal-property property">mediasoup</span> <span class="token operator">:</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token operator">...</span>\n\t\t<span class="token literal-property property">webRtcServerOptions</span> <span class="token operator">:</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token literal-property property">listenInfos</span> <span class="token operator">:</span>\n\t\t\t<span class="token punctuation">[</span>\n\t\t\t\t<span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token literal-property property">protocol</span>    <span class="token operator">:</span> <span class="token string">&#39;udp&#39;</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token literal-property property">ip</span>          <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_LISTEN_IP</span> <span class="token operator">||</span> <span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span><span class="token comment">//3. 填私有 ip</span>\n\t\t\t\t\t<span class="token literal-property property">announcedIp</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_ANNOUNCED_IP</span><span class="token punctuation">,</span><span class="token comment">//4. 公网 ip</span>\n\t\t\t\t\t<span class="token literal-property property">port</span>        <span class="token operator">:</span> <span class="token number">44444</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t<span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token literal-property property">protocol</span>    <span class="token operator">:</span> <span class="token string">&#39;tcp&#39;</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token literal-property property">ip</span>          <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_LISTEN_IP</span> <span class="token operator">||</span> <span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span><span class="token comment">//5. 填私有 ip</span>\n\t\t\t\t\t<span class="token literal-property property">announcedIp</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_ANNOUNCED_IP</span><span class="token punctuation">,</span><span class="token comment">//6. 公网 ip</span>\n\t\t\t\t\t<span class="token literal-property property">port</span>        <span class="token operator">:</span> <span class="token number">44444</span>\n\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t<span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">webRtcTransportOptions</span> <span class="token operator">:</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token literal-property property">listenIps</span> <span class="token operator">:</span>\n\t\t\t<span class="token punctuation">[</span>\n\t\t\t\t<span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token literal-property property">ip</span>          <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_LISTEN_IP</span> <span class="token operator">||</span> <span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span><span class="token comment">//7.私有网络</span>\n\t\t\t\t\t<span class="token literal-property property">announcedIp</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_ANNOUNCED_IP</span> <span class="token comment">//8.公有网络</span>\n\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t<span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t\t\t<span class="token operator">...</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">plainTransportOptions</span> <span class="token operator">:</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token literal-property property">listenIp</span> <span class="token operator">:</span>\n\t\t\t<span class="token punctuation">{</span>\n\t\t\t\t<span class="token literal-property property">ip</span>          <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_LISTEN_IP</span> <span class="token operator">||</span> <span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> <span class="token comment">//9.公有网络</span>\n\t\t\t\t<span class="token literal-property property">announcedIp</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MEDIASOUP_ANNOUNCED_IP</span> <span class="token comment">//10.公有网络</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t<span class="token literal-property property">maxSctpMessageSize</span> <span class="token operator">:</span> <span class="token number">262144</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据上面 10 个修改步骤，即可。</p><h4 id="_5-启动服务" tabindex="-1"><a class="header-anchor" href="#_5-启动服务" aria-hidden="true">#</a> 5. 启动服务</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//前台启动\n<span class="token function">npm</span> start\n//后台启动\npm2 start server.js \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mediasoup-web-部署" tabindex="-1"><a class="header-anchor" href="#mediasoup-web-部署" aria-hidden="true">#</a> mediasoup-web 部署</h3><h4 id="_1-安装web端需要的依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装web端需要的依赖" aria-hidden="true">#</a> 1. 安装web端需要的依赖</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd app\nnpm install -g yarn\nyarn install\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-启动-web-端" tabindex="-1"><a class="header-anchor" href="#_2-启动-web-端" aria-hidden="true">#</a> 2. 启动 web 端</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> lib/urlFactory.js 修改对应的端口,对应于 server https 的端口\n//前台\n<span class="token function">npm</span> start\n//后台\n<span class="token function">nohup</span> gulp live <span class="token operator">&gt;</span> output.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>如启动报</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/root/mediasoup-demo2/mediasoup-demo/app/gulpfile.js\n  58:21  error  Unexpected use of file extension &quot;json&quot; for &quot;./package.json&quot;  import/extensions\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>找到 58 行，进行如下修改</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>const PKG = require(&#39;./package.json&#39;);\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如继续报错:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/root/mediasoup-demo2/mediasoup-demo/app/lib/components/PeerView.jsx\n  <span class="token number">455</span>:6  error  Invalid property <span class="token string">&#39;playsInline&#39;</span> found on tag <span class="token string">&#39;audio&#39;</span>, but it is only allowed on: video  react/no-unknown-property\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>将&lt;audio&gt;标签的playsInline</code> 删除</p><p>继续启动应该就可以正常运行了</p><h3 id="mediasoup-android-部署" tabindex="-1"><a class="header-anchor" href="#mediasoup-android-部署" aria-hidden="true">#</a> mediasoup-android 部署</h3>',28),o={href:"https://github.com/haiyangwu/mediasoup-client-android",target:"_blank",rel:"noopener noreferrer"},l=(0,e._)("strong",null,"OpenRTClicent",-1),r=(0,e._)("h2",{id:"总结",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),(0,e.Uk)(" 总结")],-1),c=(0,e._)("p",null,"mediasoup 是一个非常强大的 WebRTC SFU 服务器框架，它提供了多路音视频流的能力，可以满足各种复杂的音视频通信需求。通过深入理解 mediasoup 的原理和使用方法，我们可以更好地利用它来构建高质量的实时音视频通信应用。希望这篇文章能够帮助你更好地理解和使用 mediasoup。",-1),d={},u=(0,a(3744).Z)(d,[["render",function(n,s){const a=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)("div",null,[t,(0,e._)("p",null,[(0,e.Uk)("我们根据 "),(0,e._)("a",p,[(0,e.Uk)("mediasoup-demo"),(0,e.Wm)(a)]),(0,e.Uk)(" 官方要求的步骤在 centos 服务器上进行部署")]),i,(0,e._)("p",null,[(0,e.Uk)("android 部署的话，我们参考 "),(0,e._)("a",o,[(0,e.Uk)("mediasoup-client-android"),(0,e.Wm)(a)]),(0,e.Uk)(" 项目，然后集成到我们核心 "),l,(0,e.Uk)(" 库中")]),r,c])}]])}}]);